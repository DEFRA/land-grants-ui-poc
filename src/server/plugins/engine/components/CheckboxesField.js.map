{"version":3,"file":"CheckboxesField.js","names":["joi","isFormValue","SelectionControlField","CheckboxesField","constructor","def","props","listType","type","options","title","formSchema","array","itemsSchema","valid","values","label","toLowerCase","items","single","required","optional","default","stateSchema","allow","getFormValueFromState","state","name","getFormValue","selected","filter","item","includes","value","map","length","undefined","isValue","getDisplayStringFromState","text","join","getContextValueFromState","Array","isArray","every"],"sources":["../../../../../src/server/plugins/engine/components/CheckboxesField.ts"],"sourcesContent":["import { type CheckboxesFieldComponent, type Item } from '@defra/forms-model'\nimport joi, { type ArraySchema } from 'joi'\n\nimport { isFormValue } from '~/src/server/plugins/engine/components/FormComponent.js'\nimport { SelectionControlField } from '~/src/server/plugins/engine/components/SelectionControlField.js'\nimport { type FormModel } from '~/src/server/plugins/engine/models/FormModel.js'\nimport { type QuestionPageController } from '~/src/server/plugins/engine/pageControllers/QuestionPageController.js'\nimport {\n  type FormState,\n  type FormStateValue,\n  type FormSubmissionState\n} from '~/src/server/plugins/engine/types.js'\n\nexport class CheckboxesField extends SelectionControlField {\n  declare options: CheckboxesFieldComponent['options']\n  declare formSchema: ArraySchema<string> | ArraySchema<number>\n  declare stateSchema: ArraySchema<string> | ArraySchema<number>\n\n  constructor(\n    def: CheckboxesFieldComponent,\n    props: ConstructorParameters<typeof SelectionControlField>[1]\n  ) {\n    super(def, props)\n\n    const { listType: type } = this\n    const { options, title } = def\n\n    let formSchema =\n      type === 'string' ? joi.array<string>() : joi.array<number>()\n\n    const itemsSchema = joi[type]()\n      .valid(...this.values)\n      .label(title.toLowerCase())\n\n    formSchema = formSchema\n      .items(itemsSchema)\n      .single()\n      .label(title.toLowerCase())\n      .required()\n\n    if (options.required === false) {\n      formSchema = formSchema.optional()\n    }\n\n    this.formSchema = formSchema.default([])\n    this.stateSchema = formSchema.default(null).allow(null)\n    this.options = options\n  }\n\n  getFormValueFromState(state: FormSubmissionState) {\n    const { items, name } = this\n\n    // State checkbox values\n    const values = this.getFormValue(state[name]) ?? []\n\n    // Map (or discard) state values to item values\n    const selected = items\n      .filter((item) => values.includes(item.value))\n      .map((item) => item.value)\n\n    return selected.length ? selected : undefined\n  }\n\n  getFormValue(value?: FormStateValue | FormState) {\n    return this.isValue(value) ? value : undefined\n  }\n\n  getDisplayStringFromState(state: FormSubmissionState) {\n    const { items } = this\n\n    // Selected checkbox values\n    const selected = this.getFormValueFromState(state) ?? []\n\n    // Map selected values to text\n    return items\n      .filter((item) => selected.includes(item.value))\n      .map((item) => item.text)\n      .join(', ')\n  }\n\n  getContextValueFromState(state: FormSubmissionState) {\n    const values = this.getFormValueFromState(state)\n\n    /**\n     * For evaluation context purposes, optional {@link CheckboxesField}\n     * with an undefined value (i.e. nothing selected) should default to [].\n     * This way conditions are not evaluated against `undefined` which throws errors.\n     * Currently these errors are caught and the evaluation returns default `false`.\n     * @see {@link QuestionPageController.getNextPath} for `undefined` return value\n     * @see {@link FormModel.makeCondition} for try/catch block with default `false`\n     * For negative conditions this is a problem because E.g.\n     * The condition: 'selectedchecks' does not contain 'someval'\n     * should return true IF 'selectedchecks' is undefined, not throw and return false.\n     */\n    return values ?? []\n  }\n\n  isValue(value?: FormStateValue | FormState): value is Item['value'][] {\n    if (!Array.isArray(value)) {\n      return false\n    }\n\n    // Skip checks when empty\n    if (!value.length) {\n      return true\n    }\n\n    return value.every(isFormValue)\n  }\n}\n"],"mappings":"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","ignoreList":[]}