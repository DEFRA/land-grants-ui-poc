{"version":3,"file":"formsService.test.js","names":["StatusCodes","getFormDefinition","getFormMetadata","FormStatus","getJson","fixtures","MANAGER_URL","process","env","jest","mock","describe","definition","metadata","form","beforeEach","mocked","mockResolvedValue","res","statusCode","OK","payload","it","slug","expect","toHaveBeenCalledWith","structuredClone","createdAt","toISOString","updatedAt","resolves","toEqual","any","Date","id","Draft","Live"],"sources":["../../../../../src/server/plugins/engine/services/formsService.test.js"],"sourcesContent":["import { StatusCodes } from 'http-status-codes'\n\nimport {\n  getFormDefinition,\n  getFormMetadata\n} from '~/src/server/plugins/engine/services/formsService.js'\nimport { FormStatus } from '~/src/server/routes/types.js'\nimport { getJson } from '~/src/server/services/httpService.js'\nimport * as fixtures from '~/test/fixtures/index.js'\n\nconst { MANAGER_URL } = process.env\n\njest.mock('~/src/server/services/httpService')\n\ndescribe('Forms service', () => {\n  const { definition, metadata } = fixtures.form\n\n  describe('getFormMetadata', () => {\n    beforeEach(() => {\n      jest.mocked(getJson).mockResolvedValue({\n        res: /** @type {IncomingMessage} */ ({\n          statusCode: StatusCodes.OK\n        }),\n        payload: metadata\n      })\n    })\n\n    it('requests JSON via form slug', async () => {\n      await getFormMetadata(metadata.slug)\n\n      expect(getJson).toHaveBeenCalledWith(\n        `${MANAGER_URL}/forms/slug/${metadata.slug}`\n      )\n    })\n\n    it('coerces timestamps from string to Date', async () => {\n      const payload = {\n        ...structuredClone(metadata),\n\n        // JSON payload uses string dates in transit\n        createdAt: metadata.createdAt.toISOString(),\n        updatedAt: metadata.updatedAt.toISOString()\n      }\n\n      jest.mocked(getJson).mockResolvedValue({\n        res: /** @type {IncomingMessage} */ ({\n          statusCode: StatusCodes.OK\n        }),\n        payload\n      })\n\n      await expect(getFormMetadata(metadata.slug)).resolves.toEqual({\n        ...metadata,\n        createdAt: expect.any(Date),\n        updatedAt: expect.any(Date)\n      })\n    })\n  })\n\n  describe('getFormDefinition', () => {\n    beforeEach(() => {\n      jest.mocked(getJson).mockResolvedValue({\n        res: /** @type {IncomingMessage} */ ({\n          statusCode: StatusCodes.OK\n        }),\n        payload: definition\n      })\n    })\n\n    it('requests JSON via form ID (draft)', async () => {\n      await getFormDefinition(metadata.id, FormStatus.Draft)\n\n      expect(getJson).toHaveBeenCalledWith(\n        `${MANAGER_URL}/forms/${metadata.id}/definition/draft`\n      )\n    })\n\n    it('requests JSON via form ID (live)', async () => {\n      await getFormDefinition(metadata.id, FormStatus.Live)\n\n      expect(getJson).toHaveBeenCalledWith(\n        `${MANAGER_URL}/forms/${metadata.id}/definition`\n      )\n    })\n  })\n})\n\n/**\n * @import { IncomingMessage } from 'node:http'\n */\n"],"mappings":"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","ignoreList":[]}