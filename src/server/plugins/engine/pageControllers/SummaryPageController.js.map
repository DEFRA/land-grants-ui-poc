{"version":3,"file":"SummaryPageController.js","names":["Boom","addDays","format","config","FileUploadField","escapeMarkdown","getAnswer","checkEmailAddressForLiveFormSubmission","checkFormStatus","SummaryViewModel","QuestionPageController","sendNotification","designerUrl","get","templateId","SummaryPageController","constructor","model","pageDef","viewName","getSummaryViewModel","request","context","viewModel","backLink","getBackLink","feedbackLink","phaseTag","makeGetRouteHandler","h","hasMissingNotificationEmail","view","makePostRouteHandler","params","state","cacheService","services","formsService","getFormMetadata","notificationEmail","slug","isPreview","path","emailAddress","def","outputEmail","submitForm","setConfirmationState","confirmed","clearState","proceed","getStatusPath","postRouteOptions","ext","onPreHandler","method","continue","summaryViewModel","extendFileRetention","sendEmail","updatedRetrievalKey","formSubmissionService","persistFiles","files","pages","forEach","page","fileUploadComponents","collection","fields","filter","component","values","getFormValueFromState","length","push","map","status","fileId","form","file","initiatedRetrievalKey","metadata","retrievalKey","submitData","items","sessionId","submit","payload","main","item","name","title","label","value","field","repeaters","subItems","detailItems","subItem","formStatus","logTags","logger","info","getFormSubmissionData","details","submitResponse","yar","id","undefined","badRequest","personalisation","getPersonalisation","err","error","result","now","Date","formattedNow","fileExpiryDate","formattedExpiryDate","formName","subject","lines","filename","body","join","relevantPages","href","flatMap","flat"],"sources":["../../../../../src/server/plugins/engine/pageControllers/SummaryPageController.ts"],"sourcesContent":["import {\n  type PageSummary,\n  type SubmitPayload,\n  type SubmitResponsePayload\n} from '@defra/forms-model'\nimport Boom from '@hapi/boom'\nimport { type ResponseToolkit, type RouteOptions } from '@hapi/hapi'\nimport { addDays, format } from 'date-fns'\n\nimport { config } from '~/src/config/index.js'\nimport { FileUploadField } from '~/src/server/plugins/engine/components/FileUploadField.js'\nimport {\n  escapeMarkdown,\n  getAnswer\n} from '~/src/server/plugins/engine/components/helpers.js'\nimport {\n  checkEmailAddressForLiveFormSubmission,\n  checkFormStatus\n} from '~/src/server/plugins/engine/helpers.js'\nimport {\n  SummaryViewModel,\n  type FormModel\n} from '~/src/server/plugins/engine/models/index.js'\nimport {\n  type Detail,\n  type DetailItem\n} from '~/src/server/plugins/engine/models/types.js'\nimport { QuestionPageController } from '~/src/server/plugins/engine/pageControllers/QuestionPageController.js'\nimport {\n  type FormContext,\n  type FormContextRequest,\n  type FormSubmissionState\n} from '~/src/server/plugins/engine/types.js'\nimport {\n  type FormRequest,\n  type FormRequestPayload,\n  type FormRequestPayloadRefs\n} from '~/src/server/routes/types.js'\nimport { sendNotification } from '~/src/server/utils/notify.js'\n\nconst designerUrl = config.get('designerUrl')\nconst templateId = config.get('notifyTemplateId')\n\nexport class SummaryPageController extends QuestionPageController {\n  declare pageDef: PageSummary\n\n  /**\n   * The controller which is used when Page[\"controller\"] is defined as \"./pages/summary.js\"\n   */\n\n  constructor(model: FormModel, pageDef: PageSummary) {\n    super(model, pageDef)\n    this.viewName = 'summary'\n  }\n\n  getSummaryViewModel(\n    request: FormContextRequest,\n    context: FormContext\n  ): SummaryViewModel {\n    const viewModel = new SummaryViewModel(request, this, context)\n\n    // We already figure these out in the base page controller. Take them and apply them to our page-specific model.\n    // This is a stop-gap until we can add proper inheritance in place.\n    viewModel.backLink = this.getBackLink(request, context)\n    viewModel.feedbackLink = this.feedbackLink\n    viewModel.phaseTag = this.phaseTag\n\n    return viewModel\n  }\n\n  /**\n   * Returns an async function. This is called in plugin.ts when there is a GET request at `/{id}/{path*}`,\n   */\n  makeGetRouteHandler() {\n    return async (\n      request: FormRequest,\n      context: FormContext,\n      h: Pick<ResponseToolkit, 'redirect' | 'view'>\n    ) => {\n      const { viewName } = this\n\n      const viewModel = this.getSummaryViewModel(request, context)\n\n      viewModel.hasMissingNotificationEmail =\n        await this.hasMissingNotificationEmail(request, context)\n\n      return h.view(viewName, viewModel)\n    }\n  }\n\n  /**\n   * Returns an async function. This is called in plugin.ts when there is a POST request at `/{id}/{path*}`.\n   * If a form is incomplete, a user will be redirected to the start page.\n   */\n  makePostRouteHandler() {\n    return async (\n      request: FormRequestPayload,\n      context: FormContext,\n      h: Pick<ResponseToolkit, 'redirect' | 'view'>\n    ) => {\n      const { model } = this\n      const { params } = request\n      const { state } = context\n\n      const { cacheService } = request.services([])\n      const { formsService } = this.model.services\n      const { getFormMetadata } = formsService\n\n      // Get the form metadata using the `slug` param\n      const { notificationEmail } = await getFormMetadata(params.slug)\n      const { isPreview } = checkFormStatus(request.path)\n      const emailAddress = notificationEmail ?? this.model.def.outputEmail\n\n      checkEmailAddressForLiveFormSubmission(emailAddress, isPreview)\n\n      // Send submission email\n      if (emailAddress) {\n        const viewModel = this.getSummaryViewModel(request, context)\n        await submitForm(request, viewModel, model, state, emailAddress)\n      }\n\n      await cacheService.setConfirmationState(request, { confirmed: true })\n\n      // Clear all form data\n      await cacheService.clearState(request)\n\n      return this.proceed(request, h, this.getStatusPath())\n    }\n  }\n\n  get postRouteOptions(): RouteOptions<FormRequestPayloadRefs> {\n    return {\n      ext: {\n        onPreHandler: {\n          method(request, h) {\n            return h.continue\n          }\n        }\n      }\n    }\n  }\n}\n\nasync function submitForm(\n  request: FormRequestPayload,\n  summaryViewModel: SummaryViewModel,\n  model: FormModel,\n  state: FormSubmissionState,\n  emailAddress: string\n) {\n  await extendFileRetention(model, state, emailAddress)\n  await sendEmail(request, summaryViewModel, model, emailAddress)\n}\n\nasync function extendFileRetention(\n  model: FormModel,\n  state: FormSubmissionState,\n  updatedRetrievalKey: string\n) {\n  const { formSubmissionService } = model.services\n  const { persistFiles } = formSubmissionService\n  const files: { fileId: string; initiatedRetrievalKey: string }[] = []\n\n  // For each file upload component with files in\n  // state, add the files to the batch getting persisted\n  model.pages.forEach((page) => {\n    const fileUploadComponents = page.collection.fields.filter(\n      (component) => component instanceof FileUploadField\n    )\n\n    fileUploadComponents.forEach((component) => {\n      const values = component.getFormValueFromState(state)\n      if (!values?.length) {\n        return\n      }\n\n      files.push(\n        ...values.map(({ status }) => ({\n          fileId: status.form.file.fileId,\n          initiatedRetrievalKey: status.metadata.retrievalKey\n        }))\n      )\n    })\n  })\n\n  if (files.length) {\n    return persistFiles(files, updatedRetrievalKey)\n  }\n}\n\nfunction submitData(\n  model: FormModel,\n  items: DetailItem[],\n  retrievalKey: string,\n  sessionId: string\n) {\n  const { formSubmissionService } = model.services\n  const { submit } = formSubmissionService\n\n  const payload: SubmitPayload = {\n    sessionId,\n    retrievalKey,\n\n    // Main form answers\n    main: items\n      .filter((item) => 'field' in item)\n      .map((item) => ({\n        name: item.name,\n        title: item.label,\n        value: getAnswer(item.field, item.state, { format: 'data' })\n      })),\n\n    // Repeater form answers\n    repeaters: items\n      .filter((item) => 'subItems' in item)\n      .map((item) => ({\n        name: item.name,\n        title: item.label,\n\n        // Repeater item values\n        value: item.subItems.map((detailItems) =>\n          detailItems.map((subItem) => ({\n            name: subItem.name,\n            title: subItem.label,\n            value: getAnswer(subItem.field, subItem.state, { format: 'data' })\n          }))\n        )\n      }))\n  }\n\n  return submit(payload)\n}\n\nasync function sendEmail(\n  request: FormRequestPayload,\n  summaryViewModel: SummaryViewModel,\n  model: FormModel,\n  emailAddress: string\n) {\n  const { path } = request\n  const formStatus = checkFormStatus(path)\n  const logTags = ['submit', 'email']\n\n  request.logger.info(logTags, 'Preparing email', formStatus)\n\n  // Get detail items\n  const items = getFormSubmissionData(\n    summaryViewModel.context,\n    summaryViewModel.details\n  )\n\n  // Submit data\n  request.logger.info(logTags, 'Submitting data')\n  const submitResponse = await submitData(\n    model,\n    items,\n    emailAddress,\n    request.yar.id\n  )\n\n  if (submitResponse === undefined) {\n    throw Boom.badRequest('Unexpected empty response from submit api')\n  }\n\n  // Get submission email personalisation\n  request.logger.info(logTags, 'Getting personalisation data')\n\n  const personalisation = getPersonalisation(\n    items,\n    model,\n    submitResponse,\n    formStatus\n  )\n\n  request.logger.info(logTags, 'Sending email')\n\n  try {\n    // Send submission email\n    await sendNotification({\n      templateId,\n      emailAddress,\n      personalisation\n    })\n\n    request.logger.info(logTags, 'Email sent successfully')\n  } catch (err) {\n    request.logger.error(logTags, 'Error sending email', err)\n\n    throw err\n  }\n}\n\nexport function getPersonalisation(\n  items: DetailItem[],\n  model: FormModel,\n  submitResponse: SubmitResponsePayload,\n  formStatus: ReturnType<typeof checkFormStatus>\n) {\n  const { files } = submitResponse.result\n\n  /**\n   * @todo Refactor this below but the code to\n   * generate the question and answers works for now\n   */\n  const now = new Date()\n  const formattedNow = `${format(now, 'h:mmaaa')} on ${format(now, 'd MMMM yyyy')}`\n\n  const fileExpiryDate = addDays(now, 30)\n  const formattedExpiryDate = `${format(fileExpiryDate, 'h:mmaaa')} on ${format(fileExpiryDate, 'eeee d MMMM yyyy')}`\n\n  const formName = escapeMarkdown(model.name)\n  const subject = formStatus.isPreview\n    ? `TEST FORM SUBMISSION: ${formName}`\n    : `Form submission: ${formName}`\n\n  const lines: string[] = []\n\n  lines.push(\n    `^ For security reasons, the links in this email expire at ${escapeMarkdown(formattedExpiryDate)}\\n`\n  )\n\n  if (formStatus.isPreview) {\n    lines.push(`This is a test of the ${formName} ${formStatus.state} form.\\n`)\n  }\n\n  lines.push(`Form submitted at ${escapeMarkdown(formattedNow)}.\\n`)\n  lines.push('---\\n')\n\n  items.forEach((item) => {\n    const label = escapeMarkdown(item.label)\n\n    lines.push(`## ${label}\\n`)\n\n    if ('subItems' in item) {\n      const filename = escapeMarkdown(`Download ${label} (CSV)`)\n      const fileId = files.repeaters[item.name]\n\n      lines.push(`[${filename}](${designerUrl}/file-download/${fileId})\\n`)\n    } else {\n      lines.push(\n        getAnswer(item.field, item.state, {\n          format: 'email'\n        })\n      )\n    }\n\n    lines.push('---\\n')\n  })\n\n  const filename = escapeMarkdown('Download main form (CSV)')\n  lines.push(`[${filename}](${designerUrl}/file-download/${files.main})\\n`)\n\n  return {\n    body: lines.join('\\n'),\n    subject\n  }\n}\n\nexport function getFormSubmissionData(context: FormContext, details: Detail[]) {\n  return context.relevantPages\n    .map(({ href }) =>\n      details.flatMap(({ items }) =>\n        items.filter(({ page }) => page.href === href)\n      )\n    )\n    .flat()\n}\n"],"mappings":"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","ignoreList":[]}