{"version":3,"file":"PageController.js","names":["ControllerPath","Boom","encodeUrl","getStartPath","normalisePath","PageController","def","name","model","pageDef","title","section","condition","collection","viewName","constructor","sections","find","conditions","path","href","getHref","keys","getRouteOptions","postRouteOptions","viewModel","showTitle","pageTitle","sectionTitle","hideTitle","page","isStartPage","serviceUrl","feedbackLink","phaseTag","feedback","emailAddress","url","phaseBanner","phase","basePath","getSummaryPath","Summary","valueOf","getStatusPath","Status","makeGetRouteHandler","request","context","h","view","makePostRouteHandler","badRequest"],"sources":["../../../../../src/server/plugins/engine/pageControllers/PageController.ts"],"sourcesContent":["import {\n  ControllerPath,\n  type FormDefinition,\n  type Page,\n  type Section\n} from '@defra/forms-model'\nimport Boom from '@hapi/boom'\nimport {\n  type Lifecycle,\n  type ResponseToolkit,\n  type RouteOptions\n} from '@hapi/hapi'\n\nimport { type ComponentCollection } from '~/src/server/plugins/engine/components/ComponentCollection.js'\nimport {\n  encodeUrl,\n  getStartPath,\n  normalisePath\n} from '~/src/server/plugins/engine/helpers.js'\nimport { type FormModel } from '~/src/server/plugins/engine/models/index.js'\nimport { type ExecutableCondition } from '~/src/server/plugins/engine/models/types.js'\nimport {\n  type FormContext,\n  type PageViewModelBase\n} from '~/src/server/plugins/engine/types.js'\nimport {\n  type FormRequest,\n  type FormRequestPayload,\n  type FormRequestPayloadRefs,\n  type FormRequestRefs\n} from '~/src/server/routes/types.js'\n\nexport class PageController {\n  /**\n   * The base class for all page controllers. Page controllers are responsible for generating the get and post route handlers when a user navigates to `/{id}/{path*}`.\n   */\n  def: FormDefinition\n  name?: string\n  model: FormModel\n  pageDef: Page\n  title: string\n  section?: Section\n  condition?: ExecutableCondition\n  collection?: ComponentCollection\n  viewName = 'index'\n\n  constructor(model: FormModel, pageDef: Page) {\n    const { def } = model\n\n    this.def = def\n    this.name = def.name\n    this.model = model\n    this.pageDef = pageDef\n    this.title = pageDef.title\n\n    // Resolve section\n    this.section = model.sections.find(\n      (section) => section.name === pageDef.section\n    )\n\n    // Resolve condition\n    if (pageDef.condition) {\n      this.condition = model.conditions[pageDef.condition]\n    }\n  }\n\n  get path() {\n    return this.pageDef.path\n  }\n\n  get href() {\n    const { path } = this\n    return this.getHref(`/${normalisePath(path)}`)\n  }\n\n  get keys() {\n    return this.collection?.keys ?? []\n  }\n\n  /**\n   * {@link https://hapi.dev/api/?v=20.1.2#route-options}\n   */\n  get getRouteOptions(): RouteOptions<FormRequestRefs> {\n    return {}\n  }\n\n  /**\n   * {@link https://hapi.dev/api/?v=20.1.2#route-options}\n   */\n  get postRouteOptions(): RouteOptions<FormRequestPayloadRefs> {\n    return {}\n  }\n\n  get viewModel(): PageViewModelBase {\n    const { name, section, title } = this\n\n    const showTitle = true\n    const pageTitle = title\n    const sectionTitle = section?.hideTitle !== true ? section?.title : ''\n\n    return {\n      name,\n      page: this,\n      pageTitle,\n      sectionTitle,\n      showTitle,\n      isStartPage: false,\n      serviceUrl: this.getHref('/'),\n      feedbackLink: this.feedbackLink,\n      phaseTag: this.phaseTag\n    }\n  }\n\n  get feedbackLink() {\n    const { def } = this\n\n    // setting the feedbackLink to undefined here for feedback forms prevents the feedback link from being shown\n    const feedbackLink = def.feedback?.emailAddress\n      ? `mailto:${def.feedback.emailAddress}`\n      : def.feedback?.url\n\n    return encodeUrl(feedbackLink)\n  }\n\n  get phaseTag() {\n    const { def } = this\n    return def.phaseBanner?.phase\n  }\n\n  getHref(path: string) {\n    const { model } = this\n\n    return path === '/'\n      ? `/${model.basePath}` // Strip trailing slash\n      : `/${model.basePath}${path}`\n  }\n\n  getStartPath() {\n    return getStartPath(this.model)\n  }\n\n  getSummaryPath() {\n    return ControllerPath.Summary.valueOf()\n  }\n\n  getStatusPath() {\n    return ControllerPath.Status.valueOf()\n  }\n\n  makeGetRouteHandler(): (\n    request: FormRequest,\n    context: FormContext,\n    h: Pick<ResponseToolkit, 'redirect' | 'view'>\n  ) => ReturnType<Lifecycle.Method<FormRequestRefs>> {\n    return (request, context, h) => {\n      const { viewModel, viewName } = this\n      return h.view(viewName, viewModel)\n    }\n  }\n\n  makePostRouteHandler(): (\n    request: FormRequestPayload,\n    context: FormContext,\n    h: Pick<ResponseToolkit, 'redirect' | 'view'>\n  ) => ReturnType<Lifecycle.Method<FormRequestPayloadRefs>> {\n    throw Boom.badRequest('Unsupported POST route handler for this page')\n  }\n}\n"],"mappings":"AAAA,SACEA,cAAc,QAIT,oBAAoB;AAC3B,OAAOC,IAAI,MAAM,YAAY;AAQ7B,SACEC,SAAS,EACTC,YAAY,EACZC,aAAa;AAef,OAAO,MAAMC,cAAc,CAAC;EAC1B;AACF;AACA;EACEC,GAAG;EACHC,IAAI;EACJC,KAAK;EACLC,OAAO;EACPC,KAAK;EACLC,OAAO;EACPC,SAAS;EACTC,UAAU;EACVC,QAAQ,GAAG,OAAO;EAElBC,WAAWA,CAACP,KAAgB,EAAEC,OAAa,EAAE;IAC3C,MAAM;MAAEH;IAAI,CAAC,GAAGE,KAAK;IAErB,IAAI,CAACF,GAAG,GAAGA,GAAG;IACd,IAAI,CAACC,IAAI,GAAGD,GAAG,CAACC,IAAI;IACpB,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,KAAK,GAAGD,OAAO,CAACC,KAAK;;IAE1B;IACA,IAAI,CAACC,OAAO,GAAGH,KAAK,CAACQ,QAAQ,CAACC,IAAI,CAC/BN,OAAO,IAAKA,OAAO,CAACJ,IAAI,KAAKE,OAAO,CAACE,OACxC,CAAC;;IAED;IACA,IAAIF,OAAO,CAACG,SAAS,EAAE;MACrB,IAAI,CAACA,SAAS,GAAGJ,KAAK,CAACU,UAAU,CAACT,OAAO,CAACG,SAAS,CAAC;IACtD;EACF;EAEA,IAAIO,IAAIA,CAAA,EAAG;IACT,OAAO,IAAI,CAACV,OAAO,CAACU,IAAI;EAC1B;EAEA,IAAIC,IAAIA,CAAA,EAAG;IACT,MAAM;MAAED;IAAK,CAAC,GAAG,IAAI;IACrB,OAAO,IAAI,CAACE,OAAO,CAAC,IAAIjB,aAAa,CAACe,IAAI,CAAC,EAAE,CAAC;EAChD;EAEA,IAAIG,IAAIA,CAAA,EAAG;IACT,OAAO,IAAI,CAACT,UAAU,EAAES,IAAI,IAAI,EAAE;EACpC;;EAEA;AACF;AACA;EACE,IAAIC,eAAeA,CAAA,EAAkC;IACnD,OAAO,CAAC,CAAC;EACX;;EAEA;AACF;AACA;EACE,IAAIC,gBAAgBA,CAAA,EAAyC;IAC3D,OAAO,CAAC,CAAC;EACX;EAEA,IAAIC,SAASA,CAAA,EAAsB;IACjC,MAAM;MAAElB,IAAI;MAAEI,OAAO;MAAED;IAAM,CAAC,GAAG,IAAI;IAErC,MAAMgB,SAAS,GAAG,IAAI;IACtB,MAAMC,SAAS,GAAGjB,KAAK;IACvB,MAAMkB,YAAY,GAAGjB,OAAO,EAAEkB,SAAS,KAAK,IAAI,GAAGlB,OAAO,EAAED,KAAK,GAAG,EAAE;IAEtE,OAAO;MACLH,IAAI;MACJuB,IAAI,EAAE,IAAI;MACVH,SAAS;MACTC,YAAY;MACZF,SAAS;MACTK,WAAW,EAAE,KAAK;MAClBC,UAAU,EAAE,IAAI,CAACX,OAAO,CAAC,GAAG,CAAC;MAC7BY,YAAY,EAAE,IAAI,CAACA,YAAY;MAC/BC,QAAQ,EAAE,IAAI,CAACA;IACjB,CAAC;EACH;EAEA,IAAID,YAAYA,CAAA,EAAG;IACjB,MAAM;MAAE3B;IAAI,CAAC,GAAG,IAAI;;IAEpB;IACA,MAAM2B,YAAY,GAAG3B,GAAG,CAAC6B,QAAQ,EAAEC,YAAY,GAC3C,UAAU9B,GAAG,CAAC6B,QAAQ,CAACC,YAAY,EAAE,GACrC9B,GAAG,CAAC6B,QAAQ,EAAEE,GAAG;IAErB,OAAOnC,SAAS,CAAC+B,YAAY,CAAC;EAChC;EAEA,IAAIC,QAAQA,CAAA,EAAG;IACb,MAAM;MAAE5B;IAAI,CAAC,GAAG,IAAI;IACpB,OAAOA,GAAG,CAACgC,WAAW,EAAEC,KAAK;EAC/B;EAEAlB,OAAOA,CAACF,IAAY,EAAE;IACpB,MAAM;MAAEX;IAAM,CAAC,GAAG,IAAI;IAEtB,OAAOW,IAAI,KAAK,GAAG,GACf,IAAIX,KAAK,CAACgC,QAAQ,EAAE,CAAC;IAAA,EACrB,IAAIhC,KAAK,CAACgC,QAAQ,GAAGrB,IAAI,EAAE;EACjC;EAEAhB,YAAYA,CAAA,EAAG;IACb,OAAOA,YAAY,CAAC,IAAI,CAACK,KAAK,CAAC;EACjC;EAEAiC,cAAcA,CAAA,EAAG;IACf,OAAOzC,cAAc,CAAC0C,OAAO,CAACC,OAAO,CAAC,CAAC;EACzC;EAEAC,aAAaA,CAAA,EAAG;IACd,OAAO5C,cAAc,CAAC6C,MAAM,CAACF,OAAO,CAAC,CAAC;EACxC;EAEAG,mBAAmBA,CAAA,EAIgC;IACjD,OAAO,CAACC,OAAO,EAAEC,OAAO,EAAEC,CAAC,KAAK;MAC9B,MAAM;QAAExB,SAAS;QAAEX;MAAS,CAAC,GAAG,IAAI;MACpC,OAAOmC,CAAC,CAACC,IAAI,CAACpC,QAAQ,EAAEW,SAAS,CAAC;IACpC,CAAC;EACH;EAEA0B,oBAAoBA,CAAA,EAIsC;IACxD,MAAMlD,IAAI,CAACmD,UAAU,CAAC,8CAA8C,CAAC;EACvE;AACF","ignoreList":[]}