{"version":3,"file":"types.js","names":[],"sources":["../../../../../src/server/plugins/engine/components/types.ts"],"sourcesContent":["import { type ComponentType, type Item } from '@defra/forms-model'\n\nimport {\n  type FormSubmissionError,\n  type FormValue,\n  type SummaryList\n} from '~/src/server/plugins/engine/types.js'\n\nexport type ComponentText = {\n  classes?: string\n  attributes?: string | Record<string, string>\n} & (\n  | {\n      text: string\n      html?: string\n    }\n  | {\n      text?: string\n      html: string\n    }\n)\n\nexport interface Label {\n  text: string\n  classes?: string\n  html?: string\n  isPageHeading?: boolean\n}\n\nexport interface Content {\n  title?: string\n  text: string\n  condition?: string\n}\n\nexport interface BackLink {\n  text: string\n  href: string\n}\n\nexport type ListItemLabel = Omit<Label, 'text' | 'isPageHeading'>\n\nexport interface ListItem {\n  text?: string\n  value?: Item['value']\n  hint?: {\n    id?: string\n    text: string\n  }\n  checked?: boolean\n  selected?: boolean\n  label?: ListItemLabel\n  condition?: string\n}\n\nexport interface DateInputItem {\n  label?: Label\n  type?: string\n  id?: string\n  name?: string\n  value?: Item['value']\n  classes?: string\n  condition?: undefined\n}\n\n// TODO: Break this down for each component (Same as model/Component).\nexport interface ViewModel extends Record<string, unknown> {\n  label?: Label\n  type?: string\n  id?: string\n  name?: string\n  value?: FormValue\n  hint?: {\n    id?: string\n    text: string\n  }\n  prefix?: ComponentText\n  suffix?: ComponentText\n  classes?: string\n  condition?: string\n  errors?: FormSubmissionError[]\n  errorMessage?: {\n    text: string\n  }\n  summaryHtml?: string\n  html?: string\n  attributes: {\n    autocomplete?: string\n    maxlength?: number\n    multiple?: string\n    accept?: string\n    inputmode?: string\n  }\n  content?: Content | Content[] | string\n  maxlength?: number\n  maxwords?: number\n  rows?: number\n  items?: ListItem[] | DateInputItem[]\n  fieldset?: {\n    attributes?: string | Record<string, string>\n    legend?: Label\n  }\n  formGroup?: {\n    classes?: string\n    attributes?: string | Record<string, string>\n  }\n  components?: ComponentViewModel[]\n  upload?: {\n    count: number\n    pendingCount: number\n    successfulCount: number\n    summaryList: SummaryList\n  }\n}\n\nexport interface ComponentViewModel {\n  type: ComponentType\n  isFormComponent: boolean\n  model: ViewModel\n}\n"],"mappings":"","ignoreList":[]}