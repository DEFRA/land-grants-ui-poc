{"version":3,"file":"ComponentBase.js","names":["isConditionalType","joi","ComponentBase","page","parent","collection","type","name","title","schema","options","isFormComponent","model","formSchema","string","stateSchema","constructor","def","props","viewModel","attributes","autocomplete","classes","condition"],"sources":["../../../../../src/server/plugins/engine/components/ComponentBase.ts"],"sourcesContent":["import { isConditionalType, type ComponentDef } from '@defra/forms-model'\nimport joi, {\n  type ArraySchema,\n  type BooleanSchema,\n  type DateSchema,\n  type NumberSchema,\n  type ObjectSchema,\n  type StringSchema\n} from 'joi'\n\nimport { type ComponentCollection } from '~/src/server/plugins/engine/components/ComponentCollection.js'\nimport { type Component } from '~/src/server/plugins/engine/components/helpers.js'\nimport { type ViewModel } from '~/src/server/plugins/engine/components/types.js'\nimport { type FormModel } from '~/src/server/plugins/engine/models/index.js'\nimport { type PageControllerClass } from '~/src/server/plugins/engine/pageControllers/helpers.js'\n\nexport class ComponentBase {\n  page?: PageControllerClass\n  parent: Component | undefined\n  collection: ComponentCollection | undefined\n\n  type: ComponentDef['type']\n  name: ComponentDef['name']\n  title: ComponentDef['title']\n  schema?: Extract<ComponentDef, { schema: object }>['schema']\n  options?: Extract<ComponentDef, { options: object }>['options']\n\n  isFormComponent = false\n  model: FormModel\n\n  /** joi schemas based on a component defined in the form JSON. This validates a user's answer and is generated from {@link ComponentDef} */\n  formSchema: ComponentSchema = joi.string()\n  stateSchema: ComponentSchema = joi.string()\n\n  constructor(\n    def: ComponentDef,\n    props: {\n      page?: PageControllerClass\n      parent?: Component\n      model: FormModel\n    }\n  ) {\n    this.type = def.type\n    this.name = def.name\n    this.title = def.title\n\n    if ('schema' in def) {\n      this.schema = def.schema\n    }\n\n    if ('options' in def) {\n      this.options = def.options\n    }\n\n    this.page = props.page\n    this.parent = props.parent\n    this.model = props.model\n  }\n\n  get viewModel() {\n    const { options, type } = this\n\n    const viewModel: ViewModel = {\n      attributes: {}\n    }\n\n    if (!options) {\n      return viewModel\n    }\n\n    if ('autocomplete' in options) {\n      viewModel.attributes.autocomplete = options.autocomplete\n    }\n\n    if ('classes' in options) {\n      viewModel.classes = options.classes\n    }\n\n    if ('condition' in options && isConditionalType(type)) {\n      viewModel.condition = options.condition\n    }\n\n    return viewModel\n  }\n}\n\nexport type ComponentSchema =\n  | ArraySchema<string>\n  | ArraySchema<number>\n  | ArraySchema<boolean>\n  | ArraySchema<object>\n  | BooleanSchema<string>\n  | DateSchema\n  | NumberSchema<string>\n  | NumberSchema\n  | ObjectSchema\n  | StringSchema\n"],"mappings":"AAAA,SAASA,iBAAiB,QAA2B,oBAAoB;AACzE,OAAOC,GAAG,MAOH,KAAK;AAQZ,OAAO,MAAMC,aAAa,CAAC;EACzBC,IAAI;EACJC,MAAM;EACNC,UAAU;EAEVC,IAAI;EACJC,IAAI;EACJC,KAAK;EACLC,MAAM;EACNC,OAAO;EAEPC,eAAe,GAAG,KAAK;EACvBC,KAAK;;EAEL;EACAC,UAAU,GAAoBZ,GAAG,CAACa,MAAM,CAAC,CAAC;EAC1CC,WAAW,GAAoBd,GAAG,CAACa,MAAM,CAAC,CAAC;EAE3CE,WAAWA,CACTC,GAAiB,EACjBC,KAIC,EACD;IACA,IAAI,CAACZ,IAAI,GAAGW,GAAG,CAACX,IAAI;IACpB,IAAI,CAACC,IAAI,GAAGU,GAAG,CAACV,IAAI;IACpB,IAAI,CAACC,KAAK,GAAGS,GAAG,CAACT,KAAK;IAEtB,IAAI,QAAQ,IAAIS,GAAG,EAAE;MACnB,IAAI,CAACR,MAAM,GAAGQ,GAAG,CAACR,MAAM;IAC1B;IAEA,IAAI,SAAS,IAAIQ,GAAG,EAAE;MACpB,IAAI,CAACP,OAAO,GAAGO,GAAG,CAACP,OAAO;IAC5B;IAEA,IAAI,CAACP,IAAI,GAAGe,KAAK,CAACf,IAAI;IACtB,IAAI,CAACC,MAAM,GAAGc,KAAK,CAACd,MAAM;IAC1B,IAAI,CAACQ,KAAK,GAAGM,KAAK,CAACN,KAAK;EAC1B;EAEA,IAAIO,SAASA,CAAA,EAAG;IACd,MAAM;MAAET,OAAO;MAAEJ;IAAK,CAAC,GAAG,IAAI;IAE9B,MAAMa,SAAoB,GAAG;MAC3BC,UAAU,EAAE,CAAC;IACf,CAAC;IAED,IAAI,CAACV,OAAO,EAAE;MACZ,OAAOS,SAAS;IAClB;IAEA,IAAI,cAAc,IAAIT,OAAO,EAAE;MAC7BS,SAAS,CAACC,UAAU,CAACC,YAAY,GAAGX,OAAO,CAACW,YAAY;IAC1D;IAEA,IAAI,SAAS,IAAIX,OAAO,EAAE;MACxBS,SAAS,CAACG,OAAO,GAAGZ,OAAO,CAACY,OAAO;IACrC;IAEA,IAAI,WAAW,IAAIZ,OAAO,IAAIV,iBAAiB,CAACM,IAAI,CAAC,EAAE;MACrDa,SAAS,CAACI,SAAS,GAAGb,OAAO,CAACa,SAAS;IACzC;IAEA,OAAOJ,SAAS;EAClB;AACF","ignoreList":[]}