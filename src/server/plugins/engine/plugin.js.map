{"version":3,"file":"plugin.js","names":["hasFormComponents","slugSchema","Boom","isEqual","Joi","PREVIEW_PATH_PREFIX","checkEmailAddressForLiveFormSubmission","checkFormStatus","findPage","getPage","getStartPath","normalisePath","proceed","redirectPath","FormModel","FileUploadPageController","RepeatPageController","defaultServices","actionSchema","confirmSchema","crumbSchema","itemIdSchema","pathSchema","stateSchema","plugin","name","dependencies","multiple","register","server","options","model","services","formsService","app","itemCache","Map","models","loadFormPreHandler","request","h","continue","params","path","slug","isPreview","state","formState","metadata","getFormMetadata","id","notFound","key","item","get","updatedAt","logger","info","definition","getFormDefinition","emailAddress","notificationEmail","outputEmail","basePath","substring","set","dispatchHandler","servicePath","redirectOrMakeHandler","makeHandler","page","getState","context","getFormContext","relevantPath","getRelevantPath","summaryPath","getSummaryPath","startsWith","isForceAccess","redirectTo","next","length","query","returnUrl","getHref","getHandler","makeGetRouteHandler","postHandler","pageDef","href","makePostRouteHandler","dispatchRouteOptions","pre","method","route","handler","validate","object","keys","getRouteOptions","itemId","optional","postRouteOptions","payload","parse","crumb","action","unknown","required","getListSummaryHandler","makeGetListSummaryRouteHandler","postListSummaryHandler","makePostListSummaryRouteHandler","getItemDeleteHandler","makeGetItemDeleteRouteHandler","postItemDeleteHandler","makePostItemDeleteRouteHandler","confirm"],"sources":["../../../../src/server/plugins/engine/plugin.ts"],"sourcesContent":["import { hasFormComponents, slugSchema } from '@defra/forms-model'\nimport Boom from '@hapi/boom'\nimport {\n  type Plugin,\n  type ResponseObject,\n  type ResponseToolkit,\n  type RouteOptions\n} from '@hapi/hapi'\nimport { isEqual } from 'date-fns'\nimport Joi from 'joi'\n\nimport { PREVIEW_PATH_PREFIX } from '~/src/server/constants.js'\nimport {\n  checkEmailAddressForLiveFormSubmission,\n  checkFormStatus,\n  findPage,\n  getPage,\n  getStartPath,\n  normalisePath,\n  proceed,\n  redirectPath\n} from '~/src/server/plugins/engine/helpers.js'\nimport { FormModel } from '~/src/server/plugins/engine/models/index.js'\nimport { FileUploadPageController } from '~/src/server/plugins/engine/pageControllers/FileUploadPageController.js'\nimport { RepeatPageController } from '~/src/server/plugins/engine/pageControllers/RepeatPageController.js'\nimport { type PageControllerClass } from '~/src/server/plugins/engine/pageControllers/helpers.js'\nimport * as defaultServices from '~/src/server/plugins/engine/services/index.js'\nimport { type FormContext } from '~/src/server/plugins/engine/types.js'\nimport {\n  type FormRequest,\n  type FormRequestPayload,\n  type FormRequestPayloadRefs,\n  type FormRequestRefs\n} from '~/src/server/routes/types.js'\nimport {\n  actionSchema,\n  confirmSchema,\n  crumbSchema,\n  itemIdSchema,\n  pathSchema,\n  stateSchema\n} from '~/src/server/schemas/index.js'\nimport { type Services } from '~/src/server/types.js'\n\nexport interface PluginOptions {\n  model?: FormModel\n  services?: Services\n}\n\nexport const plugin = {\n  name: '@defra/forms-runner/engine',\n  dependencies: '@hapi/vision',\n  multiple: true,\n  register(server, options) {\n    const { model, services = defaultServices } = options\n    const { formsService } = services\n\n    server.app.model = model\n\n    // In-memory cache of FormModel items, exposed\n    // (for testing purposes) through `server.app.models`\n    const itemCache = new Map<string, { model: FormModel; updatedAt: Date }>()\n    server.app.models = itemCache\n\n    const loadFormPreHandler = async (\n      request: FormRequest | FormRequestPayload,\n      h: Pick<ResponseToolkit, 'continue'>\n    ) => {\n      if (server.app.model) {\n        request.app.model = server.app.model\n\n        return h.continue\n      }\n\n      const { params, path } = request\n      const { slug } = params\n      const { isPreview, state: formState } = checkFormStatus(path)\n\n      // Get the form metadata using the `slug` param\n      const metadata = await formsService.getFormMetadata(slug)\n\n      const { id, [formState]: state } = metadata\n\n      // Check the metadata supports the requested state\n      if (!state) {\n        throw Boom.notFound(`No '${formState}' state for form metadata ${id}`)\n      }\n\n      // Cache the models based on id, state and whether\n      // it's a preview or not. There could be up to 3 models\n      // cached for a single form:\n      // \"{id}_live_false\" (live/live)\n      // \"{id}_live_true\" (live/preview)\n      // \"{id}_draft_true\" (draft/preview)\n      const key = `${id}_${formState}_${isPreview}`\n      let item = itemCache.get(key)\n\n      if (!item || !isEqual(item.updatedAt, state.updatedAt)) {\n        server.logger.info(\n          `Getting form definition ${id} (${slug}) ${formState}`\n        )\n\n        // Get the form definition using the `id` from the metadata\n        const definition = await formsService.getFormDefinition(id, formState)\n\n        if (!definition) {\n          throw Boom.notFound(\n            `No definition found for form metadata ${id} (${slug}) ${formState}`\n          )\n        }\n\n        const emailAddress =\n          metadata.notificationEmail ?? definition.outputEmail\n\n        checkEmailAddressForLiveFormSubmission(emailAddress, isPreview)\n\n        // Build the form model\n        server.logger.info(\n          `Building model for form definition ${id} (${slug}) ${formState}`\n        )\n\n        // Set up the basePath for the model\n        const basePath = isPreview\n          ? `${PREVIEW_PATH_PREFIX.substring(1)}/${formState}/${slug}`\n          : slug\n\n        // Construct the form model\n        const model = new FormModel(definition, { basePath }, services)\n\n        // Create new item and add it to the item cache\n        item = { model, updatedAt: state.updatedAt }\n        itemCache.set(key, item)\n      }\n\n      // Assign the model to the request data\n      // for use in the downstream handler\n      request.app.model = item.model\n\n      return h.continue\n    }\n\n    const dispatchHandler = (\n      request: FormRequest,\n      h: Pick<ResponseToolkit, 'redirect' | 'view'>\n    ) => {\n      const { model } = request.app\n\n      const servicePath = model ? `/${model.basePath}` : ''\n      return proceed(request, h, `${servicePath}${getStartPath(model)}`)\n    }\n\n    const redirectOrMakeHandler = async (\n      request: FormRequest | FormRequestPayload,\n      h: Pick<ResponseToolkit, 'redirect' | 'view'>,\n      makeHandler: (\n        page: PageControllerClass,\n        context: FormContext\n      ) => ResponseObject | Promise<ResponseObject>\n    ) => {\n      const { app, params } = request\n      const { model } = app\n\n      if (!model) {\n        throw Boom.notFound(`No model found for /${params.path}`)\n      }\n\n      const page = getPage(model, request)\n      const state = await page.getState(request)\n      const context = model.getFormContext(request, state)\n\n      const relevantPath = page.getRelevantPath(request, context)\n      const summaryPath = page.getSummaryPath()\n\n      // Return handler for relevant pages or preview URL direct access\n      if (relevantPath.startsWith(page.path) || context.isForceAccess) {\n        return makeHandler(page, context)\n      }\n\n      // Redirect back to last relevant page\n      const redirectTo = findPage(model, relevantPath)\n\n      // Set the return URL unless an exit page\n      if (redirectTo?.next.length) {\n        request.query.returnUrl = page.getHref(summaryPath)\n      }\n\n      return proceed(request, h, page.getHref(relevantPath))\n    }\n\n    const getHandler = (\n      request: FormRequest,\n      h: Pick<ResponseToolkit, 'redirect' | 'view'>\n    ) => {\n      const { params } = request\n\n      if (normalisePath(params.path) === '') {\n        return dispatchHandler(request, h)\n      }\n\n      return redirectOrMakeHandler(request, h, (page, context) =>\n        page.makeGetRouteHandler()(request, context, h)\n      )\n    }\n\n    const postHandler = (\n      request: FormRequestPayload,\n      h: Pick<ResponseToolkit, 'redirect' | 'view'>\n    ) => {\n      const { query } = request\n\n      return redirectOrMakeHandler(request, h, (page, context) => {\n        const { pageDef } = page\n        const { isForceAccess } = context\n\n        // Redirect to GET for preview URL direct access\n        if (isForceAccess && !hasFormComponents(pageDef)) {\n          return proceed(request, h, redirectPath(page.href, query))\n        }\n\n        return page.makePostRouteHandler()(request, context, h)\n      })\n    }\n\n    const dispatchRouteOptions: RouteOptions<FormRequestRefs> = {\n      pre: [\n        {\n          method: loadFormPreHandler\n        }\n      ]\n    }\n\n    server.route({\n      method: 'get',\n      path: '/{slug}',\n      handler: dispatchHandler,\n      options: {\n        ...dispatchRouteOptions,\n        validate: {\n          params: Joi.object().keys({\n            slug: slugSchema\n          })\n        }\n      }\n    })\n\n    server.route({\n      method: 'get',\n      path: '/preview/{state}/{slug}',\n      handler: dispatchHandler,\n      options: {\n        ...dispatchRouteOptions,\n        validate: {\n          params: Joi.object().keys({\n            state: stateSchema,\n            slug: slugSchema\n          })\n        }\n      }\n    })\n\n    const getRouteOptions: RouteOptions<FormRequestRefs> = {\n      pre: [\n        {\n          method: loadFormPreHandler\n        }\n      ]\n    }\n\n    server.route({\n      method: 'get',\n      path: '/{slug}/{path}/{itemId?}',\n      handler: getHandler,\n      options: {\n        ...getRouteOptions,\n        validate: {\n          params: Joi.object().keys({\n            slug: slugSchema,\n            path: pathSchema,\n            itemId: itemIdSchema.optional()\n          })\n        }\n      }\n    })\n\n    server.route({\n      method: 'get',\n      path: '/preview/{state}/{slug}/{path}/{itemId?}',\n      handler: getHandler,\n      options: {\n        ...getRouteOptions,\n        validate: {\n          params: Joi.object().keys({\n            state: stateSchema,\n            slug: slugSchema,\n            path: pathSchema,\n            itemId: itemIdSchema.optional()\n          })\n        }\n      }\n    })\n\n    const postRouteOptions: RouteOptions<FormRequestPayloadRefs> = {\n      payload: {\n        parse: true\n      },\n      pre: [{ method: loadFormPreHandler }]\n    }\n\n    server.route({\n      method: 'post',\n      path: '/{slug}/{path}/{itemId?}',\n      handler: postHandler,\n      options: {\n        ...postRouteOptions,\n        validate: {\n          params: Joi.object().keys({\n            slug: slugSchema,\n            path: pathSchema,\n            itemId: itemIdSchema.optional()\n          }),\n          payload: Joi.object()\n            .keys({\n              crumb: crumbSchema,\n              action: actionSchema\n            })\n            .unknown(true)\n            .required()\n        }\n      }\n    })\n\n    server.route({\n      method: 'post',\n      path: '/preview/{state}/{slug}/{path}/{itemId?}',\n      handler: postHandler,\n      options: {\n        ...postRouteOptions,\n        validate: {\n          params: Joi.object().keys({\n            state: stateSchema,\n            slug: slugSchema,\n            path: pathSchema,\n            itemId: itemIdSchema.optional()\n          }),\n          payload: Joi.object()\n            .keys({\n              crumb: crumbSchema,\n              action: actionSchema\n            })\n            .unknown(true)\n            .required()\n        }\n      }\n    })\n\n    /**\n     * \"AddAnother\" repeat routes\n     */\n\n    // List summary GET route\n    const getListSummaryHandler = (\n      request: FormRequest,\n      h: Pick<ResponseToolkit, 'redirect' | 'view'>\n    ) => {\n      const { params } = request\n\n      return redirectOrMakeHandler(request, h, (page, context) => {\n        if (!(page instanceof RepeatPageController)) {\n          throw Boom.notFound(`No repeater page found for /${params.path}`)\n        }\n\n        return page.makeGetListSummaryRouteHandler()(request, context, h)\n      })\n    }\n\n    server.route({\n      method: 'get',\n      path: '/{slug}/{path}/summary',\n      handler: getListSummaryHandler,\n      options: {\n        ...getRouteOptions,\n        validate: {\n          params: Joi.object().keys({\n            slug: slugSchema,\n            path: pathSchema\n          })\n        }\n      }\n    })\n\n    server.route({\n      method: 'get',\n      path: '/preview/{state}/{slug}/{path}/summary',\n      handler: getListSummaryHandler,\n      options: {\n        ...getRouteOptions,\n        validate: {\n          params: Joi.object().keys({\n            state: stateSchema,\n            slug: slugSchema,\n            path: pathSchema\n          })\n        }\n      }\n    })\n\n    // List summary POST route\n    const postListSummaryHandler = (\n      request: FormRequestPayload,\n      h: Pick<ResponseToolkit, 'redirect' | 'view'>\n    ) => {\n      const { params } = request\n\n      return redirectOrMakeHandler(request, h, (page, context) => {\n        const { isForceAccess } = context\n\n        if (isForceAccess || !(page instanceof RepeatPageController)) {\n          throw Boom.notFound(`No repeater page found for /${params.path}`)\n        }\n\n        return page.makePostListSummaryRouteHandler()(request, context, h)\n      })\n    }\n\n    server.route({\n      method: 'post',\n      path: '/{slug}/{path}/summary',\n      handler: postListSummaryHandler,\n      options: {\n        ...postRouteOptions,\n        validate: {\n          params: Joi.object().keys({\n            slug: slugSchema,\n            path: pathSchema\n          }),\n          payload: Joi.object()\n            .keys({\n              crumb: crumbSchema,\n              action: actionSchema\n            })\n            .required()\n        }\n      }\n    })\n\n    server.route({\n      method: 'post',\n      path: '/preview/{state}/{slug}/{path}/summary',\n      handler: postListSummaryHandler,\n      options: {\n        ...postRouteOptions,\n        validate: {\n          params: Joi.object().keys({\n            state: stateSchema,\n            slug: slugSchema,\n            path: pathSchema\n          }),\n          payload: Joi.object()\n            .keys({\n              crumb: crumbSchema,\n              action: actionSchema\n            })\n            .required()\n        }\n      }\n    })\n\n    // Item delete GET route\n    const getItemDeleteHandler = (\n      request: FormRequest,\n      h: Pick<ResponseToolkit, 'redirect' | 'view'>\n    ) => {\n      const { params } = request\n\n      return redirectOrMakeHandler(request, h, (page, context) => {\n        if (\n          !(\n            page instanceof RepeatPageController ||\n            page instanceof FileUploadPageController\n          )\n        ) {\n          throw Boom.notFound(`No page found for /${params.path}`)\n        }\n\n        return page.makeGetItemDeleteRouteHandler()(request, context, h)\n      })\n    }\n\n    server.route({\n      method: 'get',\n      path: '/{slug}/{path}/{itemId}/confirm-delete',\n      handler: getItemDeleteHandler,\n      options: {\n        ...getRouteOptions,\n        validate: {\n          params: Joi.object().keys({\n            slug: slugSchema,\n            path: pathSchema,\n            itemId: itemIdSchema\n          })\n        }\n      }\n    })\n\n    server.route({\n      method: 'get',\n      path: '/preview/{state}/{slug}/{path}/{itemId}/confirm-delete',\n      handler: getItemDeleteHandler,\n      options: {\n        ...getRouteOptions,\n        validate: {\n          params: Joi.object().keys({\n            state: stateSchema,\n            slug: slugSchema,\n            path: pathSchema,\n            itemId: itemIdSchema\n          })\n        }\n      }\n    })\n\n    // Item delete POST route\n    const postItemDeleteHandler = (\n      request: FormRequestPayload,\n      h: Pick<ResponseToolkit, 'redirect' | 'view'>\n    ) => {\n      const { params } = request\n\n      return redirectOrMakeHandler(request, h, (page, context) => {\n        const { isForceAccess } = context\n\n        if (\n          isForceAccess ||\n          !(\n            page instanceof RepeatPageController ||\n            page instanceof FileUploadPageController\n          )\n        ) {\n          throw Boom.notFound(`No page found for /${params.path}`)\n        }\n\n        return page.makePostItemDeleteRouteHandler()(request, context, h)\n      })\n    }\n\n    server.route({\n      method: 'post',\n      path: '/{slug}/{path}/{itemId}/confirm-delete',\n      handler: postItemDeleteHandler,\n      options: {\n        ...postRouteOptions,\n        validate: {\n          params: Joi.object().keys({\n            slug: slugSchema,\n            path: pathSchema,\n            itemId: itemIdSchema\n          }),\n          payload: Joi.object()\n            .keys({\n              crumb: crumbSchema,\n              action: actionSchema,\n              confirm: confirmSchema\n            })\n            .required()\n        }\n      }\n    })\n\n    server.route({\n      method: 'post',\n      path: '/preview/{state}/{slug}/{path}/{itemId}/confirm-delete',\n      handler: postItemDeleteHandler,\n      options: {\n        ...postRouteOptions,\n        validate: {\n          params: Joi.object().keys({\n            state: stateSchema,\n            slug: slugSchema,\n            path: pathSchema,\n            itemId: itemIdSchema\n          }),\n          payload: Joi.object()\n            .keys({\n              crumb: crumbSchema,\n              action: actionSchema,\n              confirm: confirmSchema\n            })\n            .required()\n        }\n      }\n    })\n  }\n} satisfies Plugin<PluginOptions>\n"],"mappings":"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","ignoreList":[]}