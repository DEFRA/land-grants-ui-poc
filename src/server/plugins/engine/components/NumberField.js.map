{"version":3,"file":"NumberField.js","names":["joi","FormComponent","isFormValue","messageTemplate","NumberField","constructor","def","props","options","schema","title","formSchema","number","custom","getValidatorPrecision","label","toLowerCase","required","allow","messages","customValidationMessages","empty","min","max","precision","integer","customValidationMessage","message","default","stateSchema","getFormValueFromState","state","name","getFormValue","value","isValue","undefined","getViewModel","payload","errors","viewModel","attributes","prefix","suffix","inputmode","text","isNumber","component","validator","helpers","limit","validationSchema","prefs","convert","attempt","error"],"sources":["../../../../../src/server/plugins/engine/components/NumberField.ts"],"sourcesContent":["import { type NumberFieldComponent } from '@defra/forms-model'\nimport joi, { type CustomValidator, type NumberSchema } from 'joi'\n\nimport {\n  FormComponent,\n  isFormValue\n} from '~/src/server/plugins/engine/components/FormComponent.js'\nimport { messageTemplate } from '~/src/server/plugins/engine/pageControllers/validationOptions.js'\nimport {\n  type FormPayload,\n  type FormState,\n  type FormStateValue,\n  type FormSubmissionError,\n  type FormSubmissionState\n} from '~/src/server/plugins/engine/types.js'\n\nexport class NumberField extends FormComponent {\n  declare options: NumberFieldComponent['options']\n  declare schema: NumberFieldComponent['schema']\n  declare formSchema: NumberSchema\n  declare stateSchema: NumberSchema\n\n  constructor(\n    def: NumberFieldComponent,\n    props: ConstructorParameters<typeof FormComponent>[1]\n  ) {\n    super(def, props)\n\n    const { options, schema, title } = def\n\n    let formSchema = joi\n      .number()\n      .custom(getValidatorPrecision(this))\n      .label(title.toLowerCase())\n      .required()\n\n    if (options.required === false) {\n      formSchema = formSchema.allow('')\n    } else {\n      const messages = options.customValidationMessages\n\n      formSchema = formSchema.empty('').messages({\n        'any.required': messages?.['any.required'] ?? messageTemplate.required\n      })\n    }\n\n    if (typeof schema.min === 'number') {\n      formSchema = formSchema.min(schema.min)\n    }\n\n    if (typeof schema.max === 'number') {\n      formSchema = formSchema.max(schema.max)\n    }\n\n    if (typeof schema.precision === 'number' && schema.precision <= 0) {\n      formSchema = formSchema.integer()\n    }\n\n    if (options.customValidationMessage) {\n      const message = options.customValidationMessage\n\n      formSchema = formSchema.messages({\n        'any.required': message,\n        'number.base': message,\n        'number.precision': message,\n        'number.integer': message,\n        'number.min': message,\n        'number.max': message\n      })\n    } else if (options.customValidationMessages) {\n      formSchema = formSchema.messages(options.customValidationMessages)\n    }\n\n    this.formSchema = formSchema.default('')\n    this.stateSchema = formSchema.default(null).allow(null)\n    this.options = options\n    this.schema = schema\n  }\n\n  getFormValueFromState(state: FormSubmissionState) {\n    const { name } = this\n    return this.getFormValue(state[name])\n  }\n\n  getFormValue(value?: FormStateValue | FormState) {\n    return this.isValue(value) ? value : undefined\n  }\n\n  getViewModel(payload: FormPayload, errors?: FormSubmissionError[]) {\n    const { options, schema } = this\n\n    const viewModel = super.getViewModel(payload, errors)\n    let { attributes, prefix, suffix, value } = viewModel\n\n    if (typeof schema.precision === 'undefined' || schema.precision <= 0) {\n      // If precision isn't provided or provided and\n      // less than or equal to 0, use numeric inputmode\n      attributes.inputmode = 'numeric'\n    }\n\n    if (options.prefix) {\n      prefix = {\n        text: options.prefix\n      }\n    }\n\n    if (options.suffix) {\n      suffix = {\n        text: options.suffix\n      }\n    }\n\n    // Allow any `toString()`-able value so non-numeric\n    // values are shown alongside their error messages\n    if (!isFormValue(value)) {\n      value = undefined\n    }\n\n    return {\n      ...viewModel,\n      attributes,\n      prefix,\n      suffix,\n      value\n    }\n  }\n\n  isValue(value?: FormStateValue | FormState) {\n    return NumberField.isNumber(value)\n  }\n\n  static isNumber(value?: FormStateValue | FormState): value is number {\n    return typeof value === 'number'\n  }\n}\n\nexport function getValidatorPrecision(component: NumberField) {\n  const validator: CustomValidator = (value: number, helpers) => {\n    const { options, schema } = component\n\n    const { customValidationMessage: custom } = options\n    const { precision: limit } = schema\n\n    if (!limit || limit <= 0) {\n      return value\n    }\n\n    const validationSchema = joi\n      .number()\n      .precision(limit)\n      .prefs({ convert: false })\n\n    try {\n      return joi.attempt(value, validationSchema)\n    } catch {\n      return custom\n        ? helpers.message({ custom }, { limit })\n        : helpers.error('number.precision', { limit })\n    }\n  }\n\n  return validator\n}\n"],"mappings":"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","ignoreList":[]}