{"version":3,"file":"MonthYearField.js","names":["ComponentType","format","ComponentCollection","FormComponent","isFormState","isFormValue","NumberField","messageTemplate","MonthYearField","constructor","def","props","name","options","isRequired","required","customValidationMessages","objectMissing","dateFormat","collection","type","title","schema","min","max","precision","optionalText","classes","parent","custom","getValidatorMonthYear","peers","formSchema","stateSchema","getFormValueFromState","state","value","isMonthYear","undefined","getDisplayStringFromState","date","Date","setMonth","month","monthString","toLocaleString","year","getContextValueFromState","getViewModel","payload","errors","viewModel","fieldset","label","hasError","some","error","items","map","model","errorMessage","toString","text","trim","id","legend","isState","isNumber","component","validator","helpers","values","getStateFromValidForm","context","missing","keys","key"],"sources":["../../../../../src/server/plugins/engine/components/MonthYearField.ts"],"sourcesContent":["import { ComponentType, type MonthYearFieldComponent } from '@defra/forms-model'\nimport { format } from 'date-fns'\nimport {\n  type Context,\n  type CustomValidator,\n  type LanguageMessages,\n  type ObjectSchema\n} from 'joi'\n\nimport { ComponentCollection } from '~/src/server/plugins/engine/components/ComponentCollection.js'\nimport {\n  FormComponent,\n  isFormState,\n  isFormValue\n} from '~/src/server/plugins/engine/components/FormComponent.js'\nimport { NumberField } from '~/src/server/plugins/engine/components/NumberField.js'\nimport { type DateInputItem } from '~/src/server/plugins/engine/components/types.js'\nimport { messageTemplate } from '~/src/server/plugins/engine/pageControllers/validationOptions.js'\nimport {\n  type FormPayload,\n  type FormState,\n  type FormStateValue,\n  type FormSubmissionError,\n  type FormSubmissionState\n} from '~/src/server/plugins/engine/types.js'\n\nexport class MonthYearField extends FormComponent {\n  declare options: MonthYearFieldComponent['options']\n  declare formSchema: ObjectSchema<FormPayload>\n  declare stateSchema: ObjectSchema<FormState>\n  declare collection: ComponentCollection\n\n  constructor(\n    def: MonthYearFieldComponent,\n    props: ConstructorParameters<typeof FormComponent>[1]\n  ) {\n    super(def, props)\n\n    const { name, options } = def\n\n    const isRequired = options.required !== false\n\n    const customValidationMessages: LanguageMessages = {\n      'any.required': messageTemplate.objectMissing,\n      'number.base': messageTemplate.objectMissing,\n      'number.precision': messageTemplate.dateFormat,\n      'number.integer': messageTemplate.dateFormat,\n      'number.unsafe': messageTemplate.dateFormat,\n      'number.min': messageTemplate.dateFormat,\n      'number.max': messageTemplate.dateFormat\n    }\n\n    this.collection = new ComponentCollection(\n      [\n        {\n          type: ComponentType.NumberField,\n          name: `${name}__month`,\n          title: 'Month',\n          schema: { min: 1, max: 12, precision: 0 },\n          options: {\n            required: isRequired,\n            optionalText: true,\n            classes: 'govuk-input--width-2',\n            customValidationMessages\n          }\n        },\n        {\n          type: ComponentType.NumberField,\n          name: `${name}__year`,\n          title: 'Year',\n          schema: { min: 1000, max: 3000, precision: 0 },\n          options: {\n            required: isRequired,\n            optionalText: true,\n            classes: 'govuk-input--width-4',\n            customValidationMessages\n          }\n        }\n      ],\n      { ...props, parent: this },\n      {\n        custom: getValidatorMonthYear(this),\n        peers: [`${name}__month`, `${name}__year`]\n      }\n    )\n\n    this.options = options\n    this.formSchema = this.collection.formSchema\n    this.stateSchema = this.collection.stateSchema\n  }\n\n  getFormValueFromState(state: FormSubmissionState) {\n    const value = super.getFormValueFromState(state)\n    return MonthYearField.isMonthYear(value) ? value : undefined\n  }\n\n  getDisplayStringFromState(state: FormSubmissionState) {\n    const value = this.getFormValueFromState(state)\n\n    if (!value) {\n      return ''\n    }\n\n    const date = new Date()\n    date.setMonth(value.month - 1)\n\n    const monthString = date.toLocaleString('default', { month: 'long' })\n    return `${monthString} ${value.year}`\n  }\n\n  getContextValueFromState(state: FormSubmissionState) {\n    const value = this.getFormValueFromState(state)\n\n    if (!value) {\n      return null\n    }\n\n    return format(`${value.year}-${value.month}-01`, 'yyyy-MM')\n  }\n\n  getViewModel(payload: FormPayload, errors?: FormSubmissionError[]) {\n    const { collection, name } = this\n\n    const viewModel = super.getViewModel(payload, errors)\n    let { fieldset, label } = viewModel\n\n    // Check for component errors only\n    const hasError = errors?.some((error) => error.name === name)\n\n    // Use the component collection to generate the subitems\n    const items: DateInputItem[] = collection\n      .getViewModel(payload, errors)\n      .map(({ model }) => {\n        let { label, type, value, classes, errorMessage } = model\n\n        if (label) {\n          label.toString = () => label.text // Date component uses string labels\n        }\n\n        if (hasError || errorMessage) {\n          classes = `${classes} govuk-input--error`.trim()\n        }\n\n        // Allow any `toString()`-able value so non-numeric\n        // values are shown alongside their error messages\n        if (!isFormValue(value)) {\n          value = undefined\n        }\n\n        return {\n          label,\n          id: model.id,\n          name: model.name,\n          type,\n          value,\n          classes\n        }\n      })\n\n    fieldset ??= {\n      legend: {\n        text: label.text,\n        classes: 'govuk-fieldset__legend--m'\n      }\n    }\n\n    return {\n      ...viewModel,\n      fieldset,\n      items\n    }\n  }\n\n  isState(value?: FormStateValue | FormState) {\n    return MonthYearField.isMonthYear(value)\n  }\n\n  static isMonthYear(\n    value?: FormStateValue | FormState\n  ): value is MonthYearState {\n    return (\n      isFormState(value) &&\n      NumberField.isNumber(value.month) &&\n      NumberField.isNumber(value.year)\n    )\n  }\n}\n\ninterface MonthYearState extends Record<string, number> {\n  month: number\n  year: number\n}\n\nexport function getValidatorMonthYear(component: MonthYearField) {\n  const validator: CustomValidator = (payload: FormPayload, helpers) => {\n    const { collection, name, options } = component\n\n    const values = component.getFormValueFromState(\n      component.getStateFromValidForm(payload)\n    )\n\n    const context: Context = {\n      missing: collection.keys,\n      key: name\n    }\n\n    if (!component.isState(values)) {\n      return options.required !== false\n        ? helpers.error('object.required', context)\n        : payload\n    }\n\n    return payload\n  }\n\n  return validator\n}\n"],"mappings":"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","ignoreList":[]}