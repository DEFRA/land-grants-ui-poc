{"version":3,"file":"FileUploadPageController.js","names":["ComponentType","Boom","tempItemSchema","tempStatusSchema","getError","QuestionPageController","getUploadStatus","initiateUpload","FileStatus","UploadStatus","MAX_UPLOADS","prepareStatus","status","file","form","isPending","fileStatus","pending","errorMessage","prepareFileState","fileState","FileUploadPageController","fileUpload","fileDeleteViewName","constructor","model","pageDef","collection","fileUploads","fields","filter","field","type","FileUploadField","at","length","badImplementation","path","indexOf","name","viewName","getFormDataFromState","request","state","payload","files","getFilesFromState","undefined","getState","refreshUpload","uploadState","upload","getUploadFromState","makeGetItemDeleteRouteHandler","context","h","viewModel","params","fileToRemove","find","uploadId","itemId","notFound","filename","view","backLink","getBackLink","pageTitle","itemTitle","confirmation","text","buttonConfirm","buttonCancel","makePostItemDeleteRouteHandler","confirm","getFormParams","checkRemovedFiles","proceed","getErrors","details","errors","forEach","error","isUploadError","isUploadRootError","push","formatter","index","map","join","value","href","slice","getViewModel","components","formComponent","id","formAction","uploadUrl","componentsBefore","checkUploadStatus","refreshPendingFiles","statusResponse","badRequest","uploadStatus","initiated","validateResult","validate","stripUnknown","unshift","initiateAndStoreNewUpload","promises","indexes","filesUpdated","results","Promise","allSettled","idx","result","mergeState","options","schema","max","Math","min","outputEmail","def","newUpload","accept"],"sources":["../../../../../src/server/plugins/engine/pageControllers/FileUploadPageController.ts"],"sourcesContent":["import { ComponentType, type PageFileUpload } from '@defra/forms-model'\nimport Boom from '@hapi/boom'\nimport { type ResponseToolkit } from '@hapi/hapi'\nimport { type ValidationErrorItem, type ValidationResult } from 'joi'\n\nimport {\n  tempItemSchema,\n  tempStatusSchema,\n  type FileUploadField\n} from '~/src/server/plugins/engine/components/FileUploadField.js'\nimport { getError } from '~/src/server/plugins/engine/helpers.js'\nimport { type FormModel } from '~/src/server/plugins/engine/models/index.js'\nimport { QuestionPageController } from '~/src/server/plugins/engine/pageControllers/QuestionPageController.js'\nimport {\n  getUploadStatus,\n  initiateUpload\n} from '~/src/server/plugins/engine/services/uploadService.js'\nimport {\n  FileStatus,\n  UploadStatus,\n  type FeaturedFormPageViewModel,\n  type FileState,\n  type FormContext,\n  type FormContextRequest,\n  type FormSubmissionError,\n  type FormSubmissionState,\n  type ItemDeletePageViewModel,\n  type UploadInitiateResponse,\n  type UploadStatusFileResponse,\n  type UploadStatusResponse\n} from '~/src/server/plugins/engine/types.js'\nimport {\n  type FormRequest,\n  type FormRequestPayload\n} from '~/src/server/routes/types.js'\n\nconst MAX_UPLOADS = 25\n\nfunction prepareStatus(status: UploadStatusFileResponse) {\n  const file = status.form.file\n  const isPending = file.fileStatus === FileStatus.pending\n\n  if (!file.errorMessage && isPending) {\n    file.errorMessage = 'The selected file has not fully uploaded'\n  }\n\n  return status\n}\n\nfunction prepareFileState(fileState: FileState) {\n  prepareStatus(fileState.status)\n\n  return fileState\n}\n\nexport class FileUploadPageController extends QuestionPageController {\n  declare pageDef: PageFileUpload\n\n  fileUpload: FileUploadField\n  fileDeleteViewName = 'item-delete'\n\n  constructor(model: FormModel, pageDef: PageFileUpload) {\n    super(model, pageDef)\n\n    const { collection } = this\n\n    // Get the file upload fields from the collection\n    const fileUploads = collection.fields.filter(\n      (field): field is FileUploadField =>\n        field.type === ComponentType.FileUploadField\n    )\n\n    const fileUpload = fileUploads.at(0)\n\n    // Assert we have exactly 1 file upload component\n    if (!fileUpload || fileUploads.length > 1) {\n      throw Boom.badImplementation(\n        `Expected 1 FileUploadFieldComponent in FileUploadPageController '${pageDef.path}'`\n      )\n    }\n\n    // Assert the file upload component is the first form component\n    if (collection.fields.indexOf(fileUpload) !== 0) {\n      throw Boom.badImplementation(\n        `Expected '${fileUpload.name}' to be the first form component in FileUploadPageController '${pageDef.path}'`\n      )\n    }\n\n    // Assign the file upload component to the controller\n    this.fileUpload = fileUpload\n    this.viewName = 'file-upload'\n  }\n\n  getFormDataFromState(\n    request: FormContextRequest | undefined,\n    state: FormSubmissionState\n  ) {\n    const { fileUpload } = this\n\n    const payload = super.getFormDataFromState(request, state)\n    const files = this.getFilesFromState(state)\n\n    // Append the files to the payload\n    payload[fileUpload.name] = files.length ? files : undefined\n\n    return payload\n  }\n\n  async getState(request: FormRequest | FormRequestPayload) {\n    const { fileUpload } = this\n\n    // Get the actual state\n    const state = await super.getState(request)\n    const files = this.getFilesFromState(state)\n\n    // Overwrite the files with those in the upload state\n    state[fileUpload.name] = files\n\n    return this.refreshUpload(request, state)\n  }\n\n  /**\n   * Get the uploaded files from state.\n   */\n  getFilesFromState(state: FormSubmissionState) {\n    const { path } = this\n\n    const uploadState = state.upload?.[path]\n    return uploadState?.files ?? []\n  }\n\n  /**\n   * Get the initiated upload from state.\n   */\n  getUploadFromState(state: FormSubmissionState) {\n    const { path } = this\n\n    const uploadState = state.upload?.[path]\n    return uploadState?.upload\n  }\n\n  makeGetItemDeleteRouteHandler() {\n    return (\n      request: FormRequest,\n      context: FormContext,\n      h: Pick<ResponseToolkit, 'redirect' | 'view'>\n    ) => {\n      const { viewModel } = this\n      const { params } = request\n      const { state } = context\n\n      const files = this.getFilesFromState(state)\n\n      const fileToRemove = files.find(\n        ({ uploadId }) => uploadId === params.itemId\n      )\n\n      if (!fileToRemove) {\n        throw Boom.notFound('File to delete not found')\n      }\n\n      const { filename } = fileToRemove.status.form.file\n\n      return h.view(this.fileDeleteViewName, {\n        ...viewModel,\n        context,\n        backLink: this.getBackLink(request, context),\n        pageTitle: `Are you sure you want to remove thisÂ file?`,\n        itemTitle: filename,\n        confirmation: { text: 'You cannot recover removed files.' },\n        buttonConfirm: { text: 'Remove file' },\n        buttonCancel: { text: 'Cancel' }\n      } satisfies ItemDeletePageViewModel)\n    }\n  }\n\n  makePostItemDeleteRouteHandler() {\n    return async (\n      request: FormRequestPayload,\n      context: FormContext,\n      h: Pick<ResponseToolkit, 'redirect' | 'view'>\n    ) => {\n      const { path } = this\n      const { state } = context\n\n      const { confirm } = this.getFormParams(request)\n\n      // Check for any removed files in the POST payload\n      if (confirm) {\n        await this.checkRemovedFiles(request, state)\n        return this.proceed(request, h, path)\n      }\n\n      return this.proceed(request, h)\n    }\n  }\n\n  getErrors(details?: ValidationErrorItem[]) {\n    const { fileUpload } = this\n\n    if (details) {\n      const errors: FormSubmissionError[] = []\n\n      details.forEach((error) => {\n        const isUploadError = error.path[0] === fileUpload.name\n        const isUploadRootError = isUploadError && error.path.length === 1\n\n        if (!isUploadError || isUploadRootError) {\n          // The error is for the root of the upload or another\n          // field on the page so defer to the getError helper\n          errors.push(getError(error))\n        } else {\n          const { context, path, type } = error\n\n          const formatter = (name: string | number, index: number) =>\n            index > 0 ? `__${name}` : name\n\n          if (type === 'object.unknown' && path.at(-1) === 'errorMessage') {\n            const name = path.map(formatter).join('')\n            const value = context?.value\n\n            if (value) {\n              const text = typeof value === 'string' ? value : 'Unknown error'\n              const href = `#${path.slice(0, 2).map(formatter).join('')}`\n\n              errors.push({ path, href, name, text })\n            }\n          }\n        }\n      })\n\n      return errors\n    }\n  }\n\n  getViewModel(\n    request: FormContextRequest,\n    context: FormContext\n  ): FeaturedFormPageViewModel {\n    const { fileUpload } = this\n    const { state } = context\n\n    const upload = this.getUploadFromState(state)\n\n    const viewModel = super.getViewModel(request, context)\n    const { components } = viewModel\n\n    // Featured form component\n    const [formComponent] = components.filter(\n      ({ model }) => model.id === fileUpload.name\n    )\n\n    const index = components.indexOf(formComponent)\n\n    return {\n      ...viewModel,\n      formAction: upload?.uploadUrl,\n      formComponent,\n\n      // Split out components before/after\n      componentsBefore: components.slice(0, index),\n      components: components.slice(index)\n    }\n  }\n\n  /**\n   * Refreshes the CDP upload and files in the\n   * state and checks for any removed files.\n   *\n   * If an upload exists and hasn't been consumed\n   * it gets re-used, otherwise we initiate a new one.\n   *\n   * For all of the files stored in state that are `pending`,\n   * their status is refreshed as they may now be `complete` or `rejected`.\n   * @param request - the hapi request\n   * @param state - the form state\n   */\n  private async refreshUpload(\n    request: FormRequest | FormRequestPayload,\n    state: FormSubmissionState\n  ) {\n    state = await this.checkUploadStatus(request, state)\n    state = await this.refreshPendingFiles(request, state)\n\n    return state\n  }\n\n  /**\n   * If an upload exists and hasn't been consumed\n   * it gets re-used, otherwise a new one is initiated.\n   * @param request - the hapi request\n   * @param state - the form state\n   */\n  private async checkUploadStatus(\n    request: FormRequest | FormRequestPayload,\n    state: FormSubmissionState\n  ) {\n    const upload = this.getUploadFromState(state)\n    const files = this.getFilesFromState(state)\n\n    if (upload?.uploadId) {\n      // If there is a current upload check\n      // it hasn't been consumed and re-use it\n      const uploadId = upload.uploadId\n      const statusResponse = await getUploadStatus(uploadId)\n\n      if (statusResponse === undefined) {\n        throw Boom.badRequest(\n          `Unexpected empty response from getUploadStatus for ${uploadId}`\n        )\n      }\n\n      // If the upload is in an \"initiated\" status, re-use it\n      if (statusResponse.uploadStatus === UploadStatus.initiated) {\n        return state\n      } else {\n        // Only add to files state if the file validates.\n        // This secures against html tampering of the file input\n        // by adding a 'multiple' attribute or it being\n        // changed to a simple text field or similar.\n        const validateResult: ValidationResult<FileState> =\n          tempItemSchema.validate(\n            {\n              uploadId,\n              status: statusResponse\n            },\n            { stripUnknown: true }\n          )\n\n        if (!validateResult.error) {\n          files.unshift(prepareFileState(validateResult.value))\n        }\n\n        return this.initiateAndStoreNewUpload(request, state)\n      }\n    } else {\n      return this.initiateAndStoreNewUpload(request, state)\n    }\n  }\n\n  /**\n   * For all of the files stored in state that are `pending`,\n   * their status is refreshed as they may now be `complete` or `rejected`.\n   * @param request - the hapi request\n   * @param state - the form state\n   */\n  private async refreshPendingFiles(\n    request: FormRequest | FormRequestPayload,\n    state: FormSubmissionState\n  ) {\n    const { path } = this\n\n    const upload = this.getUploadFromState(state)\n    const files = this.getFilesFromState(state)\n\n    const promises: Promise<UploadStatusResponse | undefined>[] = []\n    const indexes: number[] = []\n\n    // Refresh any pending uploads\n    files.forEach((file: FileState, index: number) => {\n      if (file.status.uploadStatus === UploadStatus.pending) {\n        promises.push(getUploadStatus(file.uploadId))\n        indexes.push(index)\n      }\n    })\n\n    if (promises.length) {\n      let filesUpdated = false\n      const results = await Promise.allSettled(promises)\n\n      // Update state with the latest result\n      for (let index = 0; index < indexes.length; index++) {\n        const idx = indexes[index]\n        const result = results[index]\n\n        if (result.status === 'fulfilled') {\n          const validateResult: ValidationResult<UploadStatusFileResponse> =\n            tempStatusSchema.validate(result.value, { stripUnknown: true })\n\n          if (!validateResult.error) {\n            files[idx].status = prepareStatus(validateResult.value)\n            filesUpdated = true\n          }\n        }\n      }\n\n      if (filesUpdated) {\n        return this.mergeState(request, state, {\n          upload: { [path]: { files, upload } }\n        })\n      }\n    }\n\n    return state\n  }\n\n  /**\n   * Checks the payload for a file getting removed\n   * and removes it from the upload files if found\n   * @param request - the hapi request\n   * @param state - the form state\n   * @returns updated state if any files have been removed\n   */\n  private async checkRemovedFiles(\n    request: FormRequestPayload,\n    state: FormSubmissionState\n  ) {\n    const { path } = this\n    const { params } = request\n\n    const upload = this.getUploadFromState(state)\n    const files = this.getFilesFromState(state)\n\n    const filesUpdated = files.filter(\n      ({ uploadId }) => uploadId !== params.itemId\n    )\n\n    if (filesUpdated.length === files.length) {\n      return\n    }\n\n    await this.mergeState(request, state, {\n      upload: { [path]: { files: filesUpdated, upload } }\n    })\n  }\n\n  /**\n   * Initiates a CDP file upload and stores in the upload state\n   * @param request - the hapi request\n   * @param state - the form state\n   */\n  private async initiateAndStoreNewUpload(\n    request: FormRequest | FormRequestPayload,\n    state: FormSubmissionState\n  ) {\n    const { fileUpload, href, path } = this\n    const { options, schema } = fileUpload\n\n    const files = this.getFilesFromState(state)\n\n    // Reset the upload in state\n    let upload: UploadInitiateResponse | undefined\n\n    // Don't initiate anymore after minimum of `schema.max` or MAX_UPLOADS\n    const max = Math.min(schema.max ?? MAX_UPLOADS, MAX_UPLOADS)\n\n    if (files.length < max) {\n      const outputEmail =\n        this.model.def.outputEmail ?? 'defraforms@defra.gov.uk'\n\n      const newUpload = await initiateUpload(href, outputEmail, options.accept)\n\n      if (newUpload === undefined) {\n        throw Boom.badRequest('Unexpected empty response from initiateUpload')\n      }\n\n      upload = newUpload\n    }\n\n    return this.mergeState(request, state, {\n      upload: { [path]: { files, upload } }\n    })\n  }\n}\n"],"mappings":"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","ignoreList":[]}