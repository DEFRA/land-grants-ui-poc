{"version":3,"file":"types.js","names":[],"sources":["../../../../../src/server/plugins/engine/models/types.ts"],"sourcesContent":["import {\n  type ConditionWrapper,\n  type FormComponentsDef,\n  type Section\n} from '@defra/forms-model'\nimport { type Expression } from 'expr-eval'\n\nimport {\n  type Field,\n  type getAnswer\n} from '~/src/server/plugins/engine/components/helpers.js'\nimport { type RepeatPageController } from '~/src/server/plugins/engine/pageControllers/RepeatPageController.js'\nimport { type PageControllerClass } from '~/src/server/plugins/engine/pageControllers/helpers.js'\nimport {\n  type FormState,\n  type FormSubmissionError\n} from '~/src/server/plugins/engine/types.js'\n\nexport type ExecutableCondition = ConditionWrapper & {\n  expr: Expression\n  fn: (evaluationState: FormState) => boolean\n}\n\n/**\n * Used to render a row on a Summary List (check your answers)\n */\nexport interface DetailItemBase {\n  /**\n   * Name of the component defined in the JSON\n   * @see {@link FormComponentsDef.name}\n   */\n  name: string\n\n  /**\n   * Field label, used for change link visually hidden text\n   * @see {@link FormComponentsDef.title}\n   */\n  label: string\n\n  /**\n   * Field change link\n   */\n  href: string\n\n  /**\n   * Form submission state (or repeat state for sub items)\n   */\n  state: FormState\n\n  /**\n   * Field submission state error, used to flag unanswered questions\n   * Shown as 'Complete all unanswered questions before submitting the form'\n   */\n  error?: FormSubmissionError\n}\n\nexport interface DetailItemField extends DetailItemBase {\n  /**\n   * Field page controller instance\n   */\n  page: Exclude<PageControllerClass, RepeatPageController>\n\n  /**\n   * Check answers summary list key\n   * For example, 'Date of birth'\n   */\n  title: string\n\n  /**\n   * Check answers summary list value, formatted by {@link getAnswer}\n   * For example, date fields formatted as '25 December 2022'\n   */\n  value: string\n\n  /**\n   * Field component instance\n   */\n  field: Field\n}\n\nexport interface DetailItemRepeat extends DetailItemBase {\n  /**\n   * Repeat page controller instance\n   */\n  page: RepeatPageController\n\n  /**\n   * Check answers summary list key\n   * For example, 'Pizza' or 'Pizza added'\n   */\n  title: string\n\n  /**\n   * Check answers summary list value\n   * For example, 'You added 2 Pizzas'\n   */\n  value: string\n\n  /**\n   * Repeater field detail items\n   */\n  subItems: DetailItemField[][]\n}\n\nexport type DetailItem = DetailItemField | DetailItemRepeat\n\n/**\n * Used to render a row on a Summary List (check your answers)\n */\nexport interface Detail {\n  name?: Section['name']\n  title?: Section['title']\n  items: DetailItem[]\n}\n"],"mappings":"","ignoreList":[]}