{"version":3,"file":"helpers.js","names":["ControllerType","controllerNameFromPath","isControllerName","PageControllers","isPageController","controllerName","createPage","model","pageDef","controller","QuestionPageController","Start","StartPageController","Page","Terminal","TerminalPageController","Summary","SummaryPageController","Status","StatusPageController","FileUpload","FileUploadPageController","Repeat","RepeatPageController","Error"],"sources":["../../../../../src/server/plugins/engine/pageControllers/helpers.ts"],"sourcesContent":["import {\n  ControllerType,\n  controllerNameFromPath,\n  isControllerName,\n  type Page\n} from '@defra/forms-model'\n\nimport { type FormModel } from '~/src/server/plugins/engine/models/FormModel.js'\nimport * as PageControllers from '~/src/server/plugins/engine/pageControllers/index.js'\n\nexport function isPageController(\n  controllerName?: string | ControllerType\n): controllerName is keyof typeof PageControllers {\n  return isControllerName(controllerName) && controllerName in PageControllers\n}\n\nexport type PageControllerClass = InstanceType<PageControllerType>\nexport type PageControllerType =\n  (typeof PageControllers)[keyof typeof PageControllers]\n\n/**\n * Creates page instance for each {@link Page} type\n */\nexport function createPage(model: FormModel, pageDef: Page) {\n  const controllerName = controllerNameFromPath(pageDef.controller)\n\n  if (!pageDef.controller) {\n    return new PageControllers.QuestionPageController(model, pageDef)\n  }\n\n  // Patch legacy controllers\n  if (controllerName && pageDef.controller !== controllerName) {\n    pageDef.controller = controllerName\n  }\n\n  let controller: PageControllerClass | undefined\n\n  switch (pageDef.controller) {\n    case ControllerType.Start:\n      controller = new PageControllers.StartPageController(model, pageDef)\n      break\n\n    case ControllerType.Page:\n      controller = new PageControllers.QuestionPageController(model, pageDef)\n      break\n\n    case ControllerType.Terminal:\n      controller = new PageControllers.TerminalPageController(model, pageDef)\n      break\n\n    case ControllerType.Summary:\n      controller = new PageControllers.SummaryPageController(model, pageDef)\n      break\n\n    case ControllerType.Status:\n      controller = new PageControllers.StatusPageController(model, pageDef)\n      break\n\n    case ControllerType.FileUpload:\n      controller = new PageControllers.FileUploadPageController(model, pageDef)\n      break\n\n    case ControllerType.Repeat:\n      controller = new PageControllers.RepeatPageController(model, pageDef)\n      break\n  }\n\n  if (typeof controller === 'undefined') {\n    throw new Error(`Page controller ${pageDef.controller} does not exist`)\n  }\n\n  return controller\n}\n"],"mappings":"AAAA,SACEA,cAAc,EACdC,sBAAsB,EACtBC,gBAAgB,QAEX,oBAAoB;AAG3B,OAAO,KAAKC,eAAe;AAE3B,OAAO,SAASC,gBAAgBA,CAC9BC,cAAwC,EACQ;EAChD,OAAOH,gBAAgB,CAACG,cAAc,CAAC,IAAIA,cAAc,IAAIF,eAAe;AAC9E;AAMA;AACA;AACA;AACA,OAAO,SAASG,UAAUA,CAACC,KAAgB,EAAEC,OAAa,EAAE;EAC1D,MAAMH,cAAc,GAAGJ,sBAAsB,CAACO,OAAO,CAACC,UAAU,CAAC;EAEjE,IAAI,CAACD,OAAO,CAACC,UAAU,EAAE;IACvB,OAAO,IAAIN,eAAe,CAACO,sBAAsB,CAACH,KAAK,EAAEC,OAAO,CAAC;EACnE;;EAEA;EACA,IAAIH,cAAc,IAAIG,OAAO,CAACC,UAAU,KAAKJ,cAAc,EAAE;IAC3DG,OAAO,CAACC,UAAU,GAAGJ,cAAc;EACrC;EAEA,IAAII,UAA2C;EAE/C,QAAQD,OAAO,CAACC,UAAU;IACxB,KAAKT,cAAc,CAACW,KAAK;MACvBF,UAAU,GAAG,IAAIN,eAAe,CAACS,mBAAmB,CAACL,KAAK,EAAEC,OAAO,CAAC;MACpE;IAEF,KAAKR,cAAc,CAACa,IAAI;MACtBJ,UAAU,GAAG,IAAIN,eAAe,CAACO,sBAAsB,CAACH,KAAK,EAAEC,OAAO,CAAC;MACvE;IAEF,KAAKR,cAAc,CAACc,QAAQ;MAC1BL,UAAU,GAAG,IAAIN,eAAe,CAACY,sBAAsB,CAACR,KAAK,EAAEC,OAAO,CAAC;MACvE;IAEF,KAAKR,cAAc,CAACgB,OAAO;MACzBP,UAAU,GAAG,IAAIN,eAAe,CAACc,qBAAqB,CAACV,KAAK,EAAEC,OAAO,CAAC;MACtE;IAEF,KAAKR,cAAc,CAACkB,MAAM;MACxBT,UAAU,GAAG,IAAIN,eAAe,CAACgB,oBAAoB,CAACZ,KAAK,EAAEC,OAAO,CAAC;MACrE;IAEF,KAAKR,cAAc,CAACoB,UAAU;MAC5BX,UAAU,GAAG,IAAIN,eAAe,CAACkB,wBAAwB,CAACd,KAAK,EAAEC,OAAO,CAAC;MACzE;IAEF,KAAKR,cAAc,CAACsB,MAAM;MACxBb,UAAU,GAAG,IAAIN,eAAe,CAACoB,oBAAoB,CAAChB,KAAK,EAAEC,OAAO,CAAC;MACrE;EACJ;EAEA,IAAI,OAAOC,UAAU,KAAK,WAAW,EAAE;IACrC,MAAM,IAAIe,KAAK,CAAC,mBAAmBhB,OAAO,CAACC,UAAU,iBAAiB,CAAC;EACzE;EAEA,OAAOA,UAAU;AACnB","ignoreList":[]}