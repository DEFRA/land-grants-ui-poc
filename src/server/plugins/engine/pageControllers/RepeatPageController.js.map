{"version":3,"file":"RepeatPageController.js","names":["randomUUID","Boom","Joi","isRepeatState","redirectPath","QuestionPageController","FormAction","RepeatPageController","listSummaryViewName","listDeleteViewName","repeat","constructor","model","pageDef","options","schema","itemId","string","uuid","required","collection","formSchema","append","stateSchema","object","keys","name","array","items","min","max","label","title","getFormParams","request","params","payload","getFormDataFromState","state","list","getListFromState","getItemId","item","getItemFromList","getStateFromValidForm","badRequest","itemState","updated","newList","push","indexOf","proceed","h","nextPath","getSummaryPath","find","values","makeGetRouteHandler","context","path","query","summaryPath","returnUrl","force","length","makeGetListSummaryRouteHandler","viewModel","getListSummaryViewModel","view","makePostListSummaryRouteHandler","action","hasErrorMin","Continue","hasErrorMax","AddAnother","count","itemTitle","errors","href","text","getNextPath","makeGetItemDeleteRouteHandler","notFound","backLink","getBackLink","pageTitle","buttonConfirm","buttonCancel","makePostItemDeleteRouteHandler","confirm","splice","update","mergeState","getViewModel","itemNumber","repeatCaption","sectionTitle","isForceAccess","summaryList","classes","rows","Array","isArray","forEach","index","getHref","visuallyHiddenText","itemDisplayText","fields","getDisplayStringFromState","key","value","actions","repeatTitle","showTitle","checkAnswers"],"sources":["../../../../../src/server/plugins/engine/pageControllers/RepeatPageController.ts"],"sourcesContent":["import { randomUUID } from 'crypto'\n\nimport { type PageRepeat, type Repeat } from '@defra/forms-model'\nimport Boom from '@hapi/boom'\nimport { type ResponseToolkit } from '@hapi/hapi'\nimport Joi from 'joi'\n\nimport { isRepeatState } from '~/src/server/plugins/engine/components/FormComponent.js'\nimport { redirectPath } from '~/src/server/plugins/engine/helpers.js'\nimport { type FormModel } from '~/src/server/plugins/engine/models/index.js'\nimport { QuestionPageController } from '~/src/server/plugins/engine/pageControllers/QuestionPageController.js'\nimport {\n  type FormContext,\n  type FormContextRequest,\n  type FormPageViewModel,\n  type FormPayload,\n  type FormSubmissionState,\n  type ItemDeletePageViewModel,\n  type RepeatItemState,\n  type RepeatListState,\n  type RepeaterSummaryPageViewModel,\n  type SummaryList,\n  type SummaryListAction\n} from '~/src/server/plugins/engine/types.js'\nimport {\n  FormAction,\n  type FormRequest,\n  type FormRequestPayload\n} from '~/src/server/routes/types.js'\n\nexport class RepeatPageController extends QuestionPageController {\n  declare pageDef: PageRepeat\n\n  listSummaryViewName = 'repeat-list-summary'\n  listDeleteViewName = 'item-delete'\n  repeat: Repeat\n\n  constructor(model: FormModel, pageDef: PageRepeat) {\n    super(model, pageDef)\n\n    this.repeat = pageDef.repeat\n\n    const { options, schema } = this.repeat\n    const itemId = Joi.string().uuid().required()\n\n    this.collection.formSchema = this.collection.formSchema.append({ itemId })\n    this.collection.stateSchema = Joi.object<RepeatItemState>().keys({\n      [options.name]: Joi.array()\n        .items(this.collection.stateSchema.append({ itemId }))\n        .min(schema.min)\n        .max(schema.max)\n        .label(`${options.title} list`)\n        .required()\n    })\n  }\n\n  get keys() {\n    const { repeat } = this\n    return [repeat.options.name, ...super.keys]\n  }\n\n  getFormParams(request?: FormContextRequest) {\n    const params = super.getFormParams(request)\n\n    // Apply an itemId to the form payload\n    if (request?.payload) {\n      params.itemId = request.params.itemId ?? randomUUID()\n    }\n\n    return params\n  }\n\n  getFormDataFromState(\n    request: FormContextRequest | undefined,\n    state: FormSubmissionState\n  ) {\n    const { repeat } = this\n\n    const params = this.getFormParams(request)\n    const list = this.getListFromState(state)\n    const itemId = this.getItemId(request)\n\n    // Create payload with repeater list state\n    if (!itemId) {\n      return {\n        ...params,\n        [repeat.options.name]: list\n      }\n    }\n\n    // Create payload with repeater item state\n    const item = this.getItemFromList(list, itemId)\n\n    return {\n      ...params,\n      ...item\n    }\n  }\n\n  getStateFromValidForm(\n    request: FormContextRequest,\n    state: FormSubmissionState,\n    payload: FormPayload\n  ) {\n    const itemId = this.getItemId(request)\n\n    if (!itemId) {\n      throw Boom.badRequest('No item ID found')\n    }\n\n    const list = this.getListFromState(state)\n    const item = this.getItemFromList(list, itemId)\n\n    const itemState = super.getStateFromValidForm(request, state, payload)\n    const updated: RepeatItemState = { ...itemState, itemId }\n    const newList = [...list]\n\n    if (!item) {\n      // Adding a new item\n      newList.push(updated)\n    } else {\n      // Update an existing item\n      newList[list.indexOf(item)] = updated\n    }\n\n    return {\n      [this.repeat.options.name]: newList\n    }\n  }\n\n  proceed(\n    request: FormContextRequest,\n    h: Pick<ResponseToolkit, 'redirect' | 'view'>\n  ) {\n    const nextPath = this.getSummaryPath(request)\n    return super.proceed(request, h, nextPath)\n  }\n\n  getItemFromList(list: RepeatListState, itemId?: string) {\n    return list.find((item) => item.itemId === itemId)\n  }\n\n  getListFromState(state: FormSubmissionState) {\n    const { name } = this.repeat.options\n    const values = state[name]\n\n    return isRepeatState(values) ? values : []\n  }\n\n  makeGetRouteHandler() {\n    return async (\n      request: FormRequest,\n      context: FormContext,\n      h: Pick<ResponseToolkit, 'redirect' | 'view'>\n    ) => {\n      const { path } = this\n      const { query } = request\n      const { state } = context\n\n      const itemId = this.getItemId(request)\n      const list = this.getListFromState(state)\n\n      if (!itemId) {\n        const summaryPath = this.getSummaryPath(request)\n        const nextPath = redirectPath(`${path}/${randomUUID()}`, {\n          returnUrl: query.returnUrl,\n          force: query.force\n        })\n\n        // Only redirect to new item when list is empty\n        return super.proceed(request, h, list.length ? summaryPath : nextPath)\n      }\n\n      return super.makeGetRouteHandler()(request, context, h)\n    }\n  }\n\n  makeGetListSummaryRouteHandler() {\n    return (\n      request: FormRequest,\n      context: FormContext,\n      h: Pick<ResponseToolkit, 'redirect' | 'view'>\n    ) => {\n      const { path } = this\n      const { query } = request\n      const { state } = context\n\n      const list = this.getListFromState(state)\n\n      if (!list.length) {\n        const nextPath = redirectPath(`${path}/${randomUUID()}`, {\n          returnUrl: query.returnUrl\n        })\n\n        return super.proceed(request, h, nextPath)\n      }\n\n      const viewModel = this.getListSummaryViewModel(request, context, list)\n\n      return h.view(this.listSummaryViewName, viewModel)\n    }\n  }\n\n  makePostListSummaryRouteHandler() {\n    return (\n      request: FormRequestPayload,\n      context: FormContext,\n      h: Pick<ResponseToolkit, 'redirect' | 'view'>\n    ) => {\n      const { path, repeat } = this\n      const { query } = request\n      const { schema, options } = repeat\n      const { state } = context\n\n      const list = this.getListFromState(state)\n\n      if (!list.length) {\n        const nextPath = redirectPath(`${path}/${randomUUID()}`, {\n          returnUrl: query.returnUrl\n        })\n\n        return super.proceed(request, h, nextPath)\n      }\n\n      const { action } = this.getFormParams(request)\n\n      const hasErrorMin =\n        action === FormAction.Continue && list.length < schema.min\n\n      const hasErrorMax =\n        (action === FormAction.AddAnother && list.length >= schema.max) ||\n        (action === FormAction.Continue && list.length > schema.max)\n\n      // Show error if repeat limits apply\n      if (hasErrorMin || hasErrorMax) {\n        const count = hasErrorMax ? schema.max : schema.min\n        const itemTitle = `${options.title}${count === 1 ? '' : 's'}`\n\n        context.errors = [\n          {\n            path: [],\n            href: '',\n            name: '',\n            text: hasErrorMax\n              ? `You can only add up to ${count} ${itemTitle}`\n              : `You must add at least ${count} ${itemTitle}`\n          }\n        ]\n\n        const viewModel = this.getListSummaryViewModel(request, context, list)\n\n        return h.view(this.listSummaryViewName, viewModel)\n      }\n\n      if (action === FormAction.AddAnother) {\n        const nextPath = redirectPath(`${path}/${randomUUID()}`, {\n          returnUrl: query.returnUrl\n        })\n\n        return super.proceed(request, h, nextPath)\n      }\n\n      const nextPath = this.getNextPath(context)\n      return super.proceed(request, h, nextPath)\n    }\n  }\n\n  makeGetItemDeleteRouteHandler() {\n    return (\n      request: FormRequest,\n      context: FormContext,\n      h: Pick<ResponseToolkit, 'redirect' | 'view'>\n    ) => {\n      const { viewModel } = this\n      const { state } = context\n\n      const list = this.getListFromState(state)\n      const itemId = this.getItemId(request)\n      const item = this.getItemFromList(list, itemId)\n\n      if (!item || list.length === 1) {\n        throw Boom.notFound(\n          item\n            ? 'Last list item cannot be removed'\n            : 'List item to remove not found'\n        )\n      }\n\n      const { title } = this.repeat.options\n\n      return h.view(this.listDeleteViewName, {\n        ...viewModel,\n        context,\n        backLink: this.getBackLink(request, context),\n        pageTitle: `Are you sure you want to remove this ${title}?`,\n        itemTitle: `${title} ${list.indexOf(item) + 1}`,\n        buttonConfirm: { text: `Remove ${title}` },\n        buttonCancel: { text: 'Cancel' }\n      } satisfies ItemDeletePageViewModel)\n    }\n  }\n\n  makePostItemDeleteRouteHandler() {\n    return async (\n      request: FormRequestPayload,\n      context: FormContext,\n      h: Pick<ResponseToolkit, 'redirect' | 'view'>\n    ) => {\n      const { repeat } = this\n      const { state } = context\n\n      const { confirm } = this.getFormParams(request)\n\n      const list = this.getListFromState(state)\n      const itemId = this.getItemId(request)\n      const item = this.getItemFromList(list, itemId)\n\n      if (!item || list.length === 1) {\n        throw Boom.notFound(\n          item\n            ? 'Last list item cannot be removed'\n            : 'List item to remove not found'\n        )\n      }\n\n      // Remove the item from the list\n      if (confirm) {\n        list.splice(list.indexOf(item), 1)\n\n        const update = {\n          [repeat.options.name]: list\n        }\n\n        await this.mergeState(request, state, update)\n      }\n\n      return this.proceed(request, h)\n    }\n  }\n\n  getViewModel(\n    request: FormContextRequest,\n    context: FormContext\n  ): FormPageViewModel {\n    const { state } = context\n\n    const list = this.getListFromState(state)\n    const itemId = this.getItemId(request)\n    const item = this.getItemFromList(list, itemId)\n\n    const viewModel = super.getViewModel(request, context)\n    const itemNumber = item ? list.indexOf(item) + 1 : list.length + 1\n    const repeatCaption = `${this.repeat.options.title} ${itemNumber}`\n\n    return {\n      ...viewModel,\n\n      sectionTitle: viewModel.sectionTitle\n        ? `${viewModel.sectionTitle}: ${repeatCaption}`\n        : repeatCaption\n    }\n  }\n\n  getListSummaryViewModel(\n    request: FormContextRequest,\n    context: FormContext,\n    list: RepeatListState\n  ): RepeaterSummaryPageViewModel {\n    const { collection, href, repeat } = this\n    const { query } = request\n    const { isForceAccess, errors } = context\n\n    const { title } = repeat.options\n\n    const summaryList: SummaryList = {\n      classes: 'govuk-summary-list--long-actions',\n      rows: []\n    }\n\n    let count = 0\n\n    if (Array.isArray(list)) {\n      count = list.length\n\n      const summaryPath = this.getSummaryPath(request)\n\n      list.forEach((item, index) => {\n        const items: SummaryListAction[] = []\n\n        // Remove summary list actions from previews\n        if (!isForceAccess) {\n          items.push({\n            href: redirectPath(`${href}/${item.itemId}`, {\n              returnUrl: query.returnUrl ?? this.getHref(summaryPath)\n            }),\n            text: 'Change',\n            classes: 'govuk-link--no-visited-state',\n            visuallyHiddenText: `item ${index + 1}`\n          })\n\n          if (count > 1) {\n            items.push({\n              href: redirectPath(`${href}/${item.itemId}/confirm-delete`, {\n                returnUrl: query.returnUrl\n              }),\n              text: 'Remove',\n              classes: 'govuk-link--no-visited-state',\n              visuallyHiddenText: `item ${index + 1}`\n            })\n          }\n        }\n\n        const itemDisplayText = collection.fields.length\n          ? collection.fields[0].getDisplayStringFromState(item)\n          : ''\n\n        summaryList.rows.push({\n          key: {\n            text: `${title} ${index + 1}`\n          },\n          value: {\n            text: itemDisplayText || 'Not supplied'\n          },\n          actions: {\n            items\n          }\n        })\n      })\n    }\n\n    return {\n      ...this.viewModel,\n      backLink: this.getBackLink(request, context),\n      repeatTitle: title,\n      pageTitle: `You have added ${count} ${title}${count === 1 ? '' : 's'}`,\n      showTitle: true,\n      context,\n      errors,\n      checkAnswers: [{ summaryList }]\n    }\n  }\n\n  getSummaryPath(request?: FormContextRequest) {\n    const { path } = this\n\n    const summaryPath = super.getSummaryPath()\n\n    if (!request) {\n      return summaryPath\n    }\n\n    const { query } = request\n\n    return redirectPath(`${path}${summaryPath}`, {\n      returnUrl: query.returnUrl\n    })\n  }\n}\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,QAAQ;AAGnC,OAAOC,IAAI,MAAM,YAAY;AAE7B,OAAOC,GAAG,MAAM,KAAK;AAErB,SAASC,aAAa;AACtB,SAASC,YAAY;AAErB,SAASC,sBAAsB;AAc/B,SACEC,UAAU;AAKZ,OAAO,MAAMC,oBAAoB,SAASF,sBAAsB,CAAC;EAG/DG,mBAAmB,GAAG,qBAAqB;EAC3CC,kBAAkB,GAAG,aAAa;EAClCC,MAAM;EAENC,WAAWA,CAACC,KAAgB,EAAEC,OAAmB,EAAE;IACjD,KAAK,CAACD,KAAK,EAAEC,OAAO,CAAC;IAErB,IAAI,CAACH,MAAM,GAAGG,OAAO,CAACH,MAAM;IAE5B,MAAM;MAAEI,OAAO;MAAEC;IAAO,CAAC,GAAG,IAAI,CAACL,MAAM;IACvC,MAAMM,MAAM,GAAGd,GAAG,CAACe,MAAM,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;IAE7C,IAAI,CAACC,UAAU,CAACC,UAAU,GAAG,IAAI,CAACD,UAAU,CAACC,UAAU,CAACC,MAAM,CAAC;MAAEN;IAAO,CAAC,CAAC;IAC1E,IAAI,CAACI,UAAU,CAACG,WAAW,GAAGrB,GAAG,CAACsB,MAAM,CAAkB,CAAC,CAACC,IAAI,CAAC;MAC/D,CAACX,OAAO,CAACY,IAAI,GAAGxB,GAAG,CAACyB,KAAK,CAAC,CAAC,CACxBC,KAAK,CAAC,IAAI,CAACR,UAAU,CAACG,WAAW,CAACD,MAAM,CAAC;QAAEN;MAAO,CAAC,CAAC,CAAC,CACrDa,GAAG,CAACd,MAAM,CAACc,GAAG,CAAC,CACfC,GAAG,CAACf,MAAM,CAACe,GAAG,CAAC,CACfC,KAAK,CAAC,GAAGjB,OAAO,CAACkB,KAAK,OAAO,CAAC,CAC9Bb,QAAQ,CAAC;IACd,CAAC,CAAC;EACJ;EAEA,IAAIM,IAAIA,CAAA,EAAG;IACT,MAAM;MAAEf;IAAO,CAAC,GAAG,IAAI;IACvB,OAAO,CAACA,MAAM,CAACI,OAAO,CAACY,IAAI,EAAE,GAAG,KAAK,CAACD,IAAI,CAAC;EAC7C;EAEAQ,aAAaA,CAACC,OAA4B,EAAE;IAC1C,MAAMC,MAAM,GAAG,KAAK,CAACF,aAAa,CAACC,OAAO,CAAC;;IAE3C;IACA,IAAIA,OAAO,EAAEE,OAAO,EAAE;MACpBD,MAAM,CAACnB,MAAM,GAAGkB,OAAO,CAACC,MAAM,CAACnB,MAAM,IAAIhB,UAAU,CAAC,CAAC;IACvD;IAEA,OAAOmC,MAAM;EACf;EAEAE,oBAAoBA,CAClBH,OAAuC,EACvCI,KAA0B,EAC1B;IACA,MAAM;MAAE5B;IAAO,CAAC,GAAG,IAAI;IAEvB,MAAMyB,MAAM,GAAG,IAAI,CAACF,aAAa,CAACC,OAAO,CAAC;IAC1C,MAAMK,IAAI,GAAG,IAAI,CAACC,gBAAgB,CAACF,KAAK,CAAC;IACzC,MAAMtB,MAAM,GAAG,IAAI,CAACyB,SAAS,CAACP,OAAO,CAAC;;IAEtC;IACA,IAAI,CAAClB,MAAM,EAAE;MACX,OAAO;QACL,GAAGmB,MAAM;QACT,CAACzB,MAAM,CAACI,OAAO,CAACY,IAAI,GAAGa;MACzB,CAAC;IACH;;IAEA;IACA,MAAMG,IAAI,GAAG,IAAI,CAACC,eAAe,CAACJ,IAAI,EAAEvB,MAAM,CAAC;IAE/C,OAAO;MACL,GAAGmB,MAAM;MACT,GAAGO;IACL,CAAC;EACH;EAEAE,qBAAqBA,CACnBV,OAA2B,EAC3BI,KAA0B,EAC1BF,OAAoB,EACpB;IACA,MAAMpB,MAAM,GAAG,IAAI,CAACyB,SAAS,CAACP,OAAO,CAAC;IAEtC,IAAI,CAAClB,MAAM,EAAE;MACX,MAAMf,IAAI,CAAC4C,UAAU,CAAC,kBAAkB,CAAC;IAC3C;IAEA,MAAMN,IAAI,GAAG,IAAI,CAACC,gBAAgB,CAACF,KAAK,CAAC;IACzC,MAAMI,IAAI,GAAG,IAAI,CAACC,eAAe,CAACJ,IAAI,EAAEvB,MAAM,CAAC;IAE/C,MAAM8B,SAAS,GAAG,KAAK,CAACF,qBAAqB,CAACV,OAAO,EAAEI,KAAK,EAAEF,OAAO,CAAC;IACtE,MAAMW,OAAwB,GAAG;MAAE,GAAGD,SAAS;MAAE9B;IAAO,CAAC;IACzD,MAAMgC,OAAO,GAAG,CAAC,GAAGT,IAAI,CAAC;IAEzB,IAAI,CAACG,IAAI,EAAE;MACT;MACAM,OAAO,CAACC,IAAI,CAACF,OAAO,CAAC;IACvB,CAAC,MAAM;MACL;MACAC,OAAO,CAACT,IAAI,CAACW,OAAO,CAACR,IAAI,CAAC,CAAC,GAAGK,OAAO;IACvC;IAEA,OAAO;MACL,CAAC,IAAI,CAACrC,MAAM,CAACI,OAAO,CAACY,IAAI,GAAGsB;IAC9B,CAAC;EACH;EAEAG,OAAOA,CACLjB,OAA2B,EAC3BkB,CAA6C,EAC7C;IACA,MAAMC,QAAQ,GAAG,IAAI,CAACC,cAAc,CAACpB,OAAO,CAAC;IAC7C,OAAO,KAAK,CAACiB,OAAO,CAACjB,OAAO,EAAEkB,CAAC,EAAEC,QAAQ,CAAC;EAC5C;EAEAV,eAAeA,CAACJ,IAAqB,EAAEvB,MAAe,EAAE;IACtD,OAAOuB,IAAI,CAACgB,IAAI,CAAEb,IAAI,IAAKA,IAAI,CAAC1B,MAAM,KAAKA,MAAM,CAAC;EACpD;EAEAwB,gBAAgBA,CAACF,KAA0B,EAAE;IAC3C,MAAM;MAAEZ;IAAK,CAAC,GAAG,IAAI,CAAChB,MAAM,CAACI,OAAO;IACpC,MAAM0C,MAAM,GAAGlB,KAAK,CAACZ,IAAI,CAAC;IAE1B,OAAOvB,aAAa,CAACqD,MAAM,CAAC,GAAGA,MAAM,GAAG,EAAE;EAC5C;EAEAC,mBAAmBA,CAAA,EAAG;IACpB,OAAO,OACLvB,OAAoB,EACpBwB,OAAoB,EACpBN,CAA6C,KAC1C;MACH,MAAM;QAAEO;MAAK,CAAC,GAAG,IAAI;MACrB,MAAM;QAAEC;MAAM,CAAC,GAAG1B,OAAO;MACzB,MAAM;QAAEI;MAAM,CAAC,GAAGoB,OAAO;MAEzB,MAAM1C,MAAM,GAAG,IAAI,CAACyB,SAAS,CAACP,OAAO,CAAC;MACtC,MAAMK,IAAI,GAAG,IAAI,CAACC,gBAAgB,CAACF,KAAK,CAAC;MAEzC,IAAI,CAACtB,MAAM,EAAE;QACX,MAAM6C,WAAW,GAAG,IAAI,CAACP,cAAc,CAACpB,OAAO,CAAC;QAChD,MAAMmB,QAAQ,GAAGjD,YAAY,CAAC,GAAGuD,IAAI,IAAI3D,UAAU,CAAC,CAAC,EAAE,EAAE;UACvD8D,SAAS,EAAEF,KAAK,CAACE,SAAS;UAC1BC,KAAK,EAAEH,KAAK,CAACG;QACf,CAAC,CAAC;;QAEF;QACA,OAAO,KAAK,CAACZ,OAAO,CAACjB,OAAO,EAAEkB,CAAC,EAAEb,IAAI,CAACyB,MAAM,GAAGH,WAAW,GAAGR,QAAQ,CAAC;MACxE;MAEA,OAAO,KAAK,CAACI,mBAAmB,CAAC,CAAC,CAACvB,OAAO,EAAEwB,OAAO,EAAEN,CAAC,CAAC;IACzD,CAAC;EACH;EAEAa,8BAA8BA,CAAA,EAAG;IAC/B,OAAO,CACL/B,OAAoB,EACpBwB,OAAoB,EACpBN,CAA6C,KAC1C;MACH,MAAM;QAAEO;MAAK,CAAC,GAAG,IAAI;MACrB,MAAM;QAAEC;MAAM,CAAC,GAAG1B,OAAO;MACzB,MAAM;QAAEI;MAAM,CAAC,GAAGoB,OAAO;MAEzB,MAAMnB,IAAI,GAAG,IAAI,CAACC,gBAAgB,CAACF,KAAK,CAAC;MAEzC,IAAI,CAACC,IAAI,CAACyB,MAAM,EAAE;QAChB,MAAMX,QAAQ,GAAGjD,YAAY,CAAC,GAAGuD,IAAI,IAAI3D,UAAU,CAAC,CAAC,EAAE,EAAE;UACvD8D,SAAS,EAAEF,KAAK,CAACE;QACnB,CAAC,CAAC;QAEF,OAAO,KAAK,CAACX,OAAO,CAACjB,OAAO,EAAEkB,CAAC,EAAEC,QAAQ,CAAC;MAC5C;MAEA,MAAMa,SAAS,GAAG,IAAI,CAACC,uBAAuB,CAACjC,OAAO,EAAEwB,OAAO,EAAEnB,IAAI,CAAC;MAEtE,OAAOa,CAAC,CAACgB,IAAI,CAAC,IAAI,CAAC5D,mBAAmB,EAAE0D,SAAS,CAAC;IACpD,CAAC;EACH;EAEAG,+BAA+BA,CAAA,EAAG;IAChC,OAAO,CACLnC,OAA2B,EAC3BwB,OAAoB,EACpBN,CAA6C,KAC1C;MACH,MAAM;QAAEO,IAAI;QAAEjD;MAAO,CAAC,GAAG,IAAI;MAC7B,MAAM;QAAEkD;MAAM,CAAC,GAAG1B,OAAO;MACzB,MAAM;QAAEnB,MAAM;QAAED;MAAQ,CAAC,GAAGJ,MAAM;MAClC,MAAM;QAAE4B;MAAM,CAAC,GAAGoB,OAAO;MAEzB,MAAMnB,IAAI,GAAG,IAAI,CAACC,gBAAgB,CAACF,KAAK,CAAC;MAEzC,IAAI,CAACC,IAAI,CAACyB,MAAM,EAAE;QAChB,MAAMX,QAAQ,GAAGjD,YAAY,CAAC,GAAGuD,IAAI,IAAI3D,UAAU,CAAC,CAAC,EAAE,EAAE;UACvD8D,SAAS,EAAEF,KAAK,CAACE;QACnB,CAAC,CAAC;QAEF,OAAO,KAAK,CAACX,OAAO,CAACjB,OAAO,EAAEkB,CAAC,EAAEC,QAAQ,CAAC;MAC5C;MAEA,MAAM;QAAEiB;MAAO,CAAC,GAAG,IAAI,CAACrC,aAAa,CAACC,OAAO,CAAC;MAE9C,MAAMqC,WAAW,GACfD,MAAM,KAAKhE,UAAU,CAACkE,QAAQ,IAAIjC,IAAI,CAACyB,MAAM,GAAGjD,MAAM,CAACc,GAAG;MAE5D,MAAM4C,WAAW,GACdH,MAAM,KAAKhE,UAAU,CAACoE,UAAU,IAAInC,IAAI,CAACyB,MAAM,IAAIjD,MAAM,CAACe,GAAG,IAC7DwC,MAAM,KAAKhE,UAAU,CAACkE,QAAQ,IAAIjC,IAAI,CAACyB,MAAM,GAAGjD,MAAM,CAACe,GAAI;;MAE9D;MACA,IAAIyC,WAAW,IAAIE,WAAW,EAAE;QAC9B,MAAME,KAAK,GAAGF,WAAW,GAAG1D,MAAM,CAACe,GAAG,GAAGf,MAAM,CAACc,GAAG;QACnD,MAAM+C,SAAS,GAAG,GAAG9D,OAAO,CAACkB,KAAK,GAAG2C,KAAK,KAAK,CAAC,GAAG,EAAE,GAAG,GAAG,EAAE;QAE7DjB,OAAO,CAACmB,MAAM,GAAG,CACf;UACElB,IAAI,EAAE,EAAE;UACRmB,IAAI,EAAE,EAAE;UACRpD,IAAI,EAAE,EAAE;UACRqD,IAAI,EAAEN,WAAW,GACb,0BAA0BE,KAAK,IAAIC,SAAS,EAAE,GAC9C,yBAAyBD,KAAK,IAAIC,SAAS;QACjD,CAAC,CACF;QAED,MAAMV,SAAS,GAAG,IAAI,CAACC,uBAAuB,CAACjC,OAAO,EAAEwB,OAAO,EAAEnB,IAAI,CAAC;QAEtE,OAAOa,CAAC,CAACgB,IAAI,CAAC,IAAI,CAAC5D,mBAAmB,EAAE0D,SAAS,CAAC;MACpD;MAEA,IAAII,MAAM,KAAKhE,UAAU,CAACoE,UAAU,EAAE;QACpC,MAAMrB,QAAQ,GAAGjD,YAAY,CAAC,GAAGuD,IAAI,IAAI3D,UAAU,CAAC,CAAC,EAAE,EAAE;UACvD8D,SAAS,EAAEF,KAAK,CAACE;QACnB,CAAC,CAAC;QAEF,OAAO,KAAK,CAACX,OAAO,CAACjB,OAAO,EAAEkB,CAAC,EAAEC,QAAQ,CAAC;MAC5C;MAEA,MAAMA,QAAQ,GAAG,IAAI,CAAC2B,WAAW,CAACtB,OAAO,CAAC;MAC1C,OAAO,KAAK,CAACP,OAAO,CAACjB,OAAO,EAAEkB,CAAC,EAAEC,QAAQ,CAAC;IAC5C,CAAC;EACH;EAEA4B,6BAA6BA,CAAA,EAAG;IAC9B,OAAO,CACL/C,OAAoB,EACpBwB,OAAoB,EACpBN,CAA6C,KAC1C;MACH,MAAM;QAAEc;MAAU,CAAC,GAAG,IAAI;MAC1B,MAAM;QAAE5B;MAAM,CAAC,GAAGoB,OAAO;MAEzB,MAAMnB,IAAI,GAAG,IAAI,CAACC,gBAAgB,CAACF,KAAK,CAAC;MACzC,MAAMtB,MAAM,GAAG,IAAI,CAACyB,SAAS,CAACP,OAAO,CAAC;MACtC,MAAMQ,IAAI,GAAG,IAAI,CAACC,eAAe,CAACJ,IAAI,EAAEvB,MAAM,CAAC;MAE/C,IAAI,CAAC0B,IAAI,IAAIH,IAAI,CAACyB,MAAM,KAAK,CAAC,EAAE;QAC9B,MAAM/D,IAAI,CAACiF,QAAQ,CACjBxC,IAAI,GACA,kCAAkC,GAClC,+BACN,CAAC;MACH;MAEA,MAAM;QAAEV;MAAM,CAAC,GAAG,IAAI,CAACtB,MAAM,CAACI,OAAO;MAErC,OAAOsC,CAAC,CAACgB,IAAI,CAAC,IAAI,CAAC3D,kBAAkB,EAAE;QACrC,GAAGyD,SAAS;QACZR,OAAO;QACPyB,QAAQ,EAAE,IAAI,CAACC,WAAW,CAAClD,OAAO,EAAEwB,OAAO,CAAC;QAC5C2B,SAAS,EAAE,wCAAwCrD,KAAK,GAAG;QAC3D4C,SAAS,EAAE,GAAG5C,KAAK,IAAIO,IAAI,CAACW,OAAO,CAACR,IAAI,CAAC,GAAG,CAAC,EAAE;QAC/C4C,aAAa,EAAE;UAAEP,IAAI,EAAE,UAAU/C,KAAK;QAAG,CAAC;QAC1CuD,YAAY,EAAE;UAAER,IAAI,EAAE;QAAS;MACjC,CAAmC,CAAC;IACtC,CAAC;EACH;EAEAS,8BAA8BA,CAAA,EAAG;IAC/B,OAAO,OACLtD,OAA2B,EAC3BwB,OAAoB,EACpBN,CAA6C,KAC1C;MACH,MAAM;QAAE1C;MAAO,CAAC,GAAG,IAAI;MACvB,MAAM;QAAE4B;MAAM,CAAC,GAAGoB,OAAO;MAEzB,MAAM;QAAE+B;MAAQ,CAAC,GAAG,IAAI,CAACxD,aAAa,CAACC,OAAO,CAAC;MAE/C,MAAMK,IAAI,GAAG,IAAI,CAACC,gBAAgB,CAACF,KAAK,CAAC;MACzC,MAAMtB,MAAM,GAAG,IAAI,CAACyB,SAAS,CAACP,OAAO,CAAC;MACtC,MAAMQ,IAAI,GAAG,IAAI,CAACC,eAAe,CAACJ,IAAI,EAAEvB,MAAM,CAAC;MAE/C,IAAI,CAAC0B,IAAI,IAAIH,IAAI,CAACyB,MAAM,KAAK,CAAC,EAAE;QAC9B,MAAM/D,IAAI,CAACiF,QAAQ,CACjBxC,IAAI,GACA,kCAAkC,GAClC,+BACN,CAAC;MACH;;MAEA;MACA,IAAI+C,OAAO,EAAE;QACXlD,IAAI,CAACmD,MAAM,CAACnD,IAAI,CAACW,OAAO,CAACR,IAAI,CAAC,EAAE,CAAC,CAAC;QAElC,MAAMiD,MAAM,GAAG;UACb,CAACjF,MAAM,CAACI,OAAO,CAACY,IAAI,GAAGa;QACzB,CAAC;QAED,MAAM,IAAI,CAACqD,UAAU,CAAC1D,OAAO,EAAEI,KAAK,EAAEqD,MAAM,CAAC;MAC/C;MAEA,OAAO,IAAI,CAACxC,OAAO,CAACjB,OAAO,EAAEkB,CAAC,CAAC;IACjC,CAAC;EACH;EAEAyC,YAAYA,CACV3D,OAA2B,EAC3BwB,OAAoB,EACD;IACnB,MAAM;MAAEpB;IAAM,CAAC,GAAGoB,OAAO;IAEzB,MAAMnB,IAAI,GAAG,IAAI,CAACC,gBAAgB,CAACF,KAAK,CAAC;IACzC,MAAMtB,MAAM,GAAG,IAAI,CAACyB,SAAS,CAACP,OAAO,CAAC;IACtC,MAAMQ,IAAI,GAAG,IAAI,CAACC,eAAe,CAACJ,IAAI,EAAEvB,MAAM,CAAC;IAE/C,MAAMkD,SAAS,GAAG,KAAK,CAAC2B,YAAY,CAAC3D,OAAO,EAAEwB,OAAO,CAAC;IACtD,MAAMoC,UAAU,GAAGpD,IAAI,GAAGH,IAAI,CAACW,OAAO,CAACR,IAAI,CAAC,GAAG,CAAC,GAAGH,IAAI,CAACyB,MAAM,GAAG,CAAC;IAClE,MAAM+B,aAAa,GAAG,GAAG,IAAI,CAACrF,MAAM,CAACI,OAAO,CAACkB,KAAK,IAAI8D,UAAU,EAAE;IAElE,OAAO;MACL,GAAG5B,SAAS;MAEZ8B,YAAY,EAAE9B,SAAS,CAAC8B,YAAY,GAChC,GAAG9B,SAAS,CAAC8B,YAAY,KAAKD,aAAa,EAAE,GAC7CA;IACN,CAAC;EACH;EAEA5B,uBAAuBA,CACrBjC,OAA2B,EAC3BwB,OAAoB,EACpBnB,IAAqB,EACS;IAC9B,MAAM;MAAEnB,UAAU;MAAE0D,IAAI;MAAEpE;IAAO,CAAC,GAAG,IAAI;IACzC,MAAM;MAAEkD;IAAM,CAAC,GAAG1B,OAAO;IACzB,MAAM;MAAE+D,aAAa;MAAEpB;IAAO,CAAC,GAAGnB,OAAO;IAEzC,MAAM;MAAE1B;IAAM,CAAC,GAAGtB,MAAM,CAACI,OAAO;IAEhC,MAAMoF,WAAwB,GAAG;MAC/BC,OAAO,EAAE,kCAAkC;MAC3CC,IAAI,EAAE;IACR,CAAC;IAED,IAAIzB,KAAK,GAAG,CAAC;IAEb,IAAI0B,KAAK,CAACC,OAAO,CAAC/D,IAAI,CAAC,EAAE;MACvBoC,KAAK,GAAGpC,IAAI,CAACyB,MAAM;MAEnB,MAAMH,WAAW,GAAG,IAAI,CAACP,cAAc,CAACpB,OAAO,CAAC;MAEhDK,IAAI,CAACgE,OAAO,CAAC,CAAC7D,IAAI,EAAE8D,KAAK,KAAK;QAC5B,MAAM5E,KAA0B,GAAG,EAAE;;QAErC;QACA,IAAI,CAACqE,aAAa,EAAE;UAClBrE,KAAK,CAACqB,IAAI,CAAC;YACT6B,IAAI,EAAE1E,YAAY,CAAC,GAAG0E,IAAI,IAAIpC,IAAI,CAAC1B,MAAM,EAAE,EAAE;cAC3C8C,SAAS,EAAEF,KAAK,CAACE,SAAS,IAAI,IAAI,CAAC2C,OAAO,CAAC5C,WAAW;YACxD,CAAC,CAAC;YACFkB,IAAI,EAAE,QAAQ;YACdoB,OAAO,EAAE,8BAA8B;YACvCO,kBAAkB,EAAE,QAAQF,KAAK,GAAG,CAAC;UACvC,CAAC,CAAC;UAEF,IAAI7B,KAAK,GAAG,CAAC,EAAE;YACb/C,KAAK,CAACqB,IAAI,CAAC;cACT6B,IAAI,EAAE1E,YAAY,CAAC,GAAG0E,IAAI,IAAIpC,IAAI,CAAC1B,MAAM,iBAAiB,EAAE;gBAC1D8C,SAAS,EAAEF,KAAK,CAACE;cACnB,CAAC,CAAC;cACFiB,IAAI,EAAE,QAAQ;cACdoB,OAAO,EAAE,8BAA8B;cACvCO,kBAAkB,EAAE,QAAQF,KAAK,GAAG,CAAC;YACvC,CAAC,CAAC;UACJ;QACF;QAEA,MAAMG,eAAe,GAAGvF,UAAU,CAACwF,MAAM,CAAC5C,MAAM,GAC5C5C,UAAU,CAACwF,MAAM,CAAC,CAAC,CAAC,CAACC,yBAAyB,CAACnE,IAAI,CAAC,GACpD,EAAE;QAENwD,WAAW,CAACE,IAAI,CAACnD,IAAI,CAAC;UACpB6D,GAAG,EAAE;YACH/B,IAAI,EAAE,GAAG/C,KAAK,IAAIwE,KAAK,GAAG,CAAC;UAC7B,CAAC;UACDO,KAAK,EAAE;YACLhC,IAAI,EAAE4B,eAAe,IAAI;UAC3B,CAAC;UACDK,OAAO,EAAE;YACPpF;UACF;QACF,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;IAEA,OAAO;MACL,GAAG,IAAI,CAACsC,SAAS;MACjBiB,QAAQ,EAAE,IAAI,CAACC,WAAW,CAAClD,OAAO,EAAEwB,OAAO,CAAC;MAC5CuD,WAAW,EAAEjF,KAAK;MAClBqD,SAAS,EAAE,kBAAkBV,KAAK,IAAI3C,KAAK,GAAG2C,KAAK,KAAK,CAAC,GAAG,EAAE,GAAG,GAAG,EAAE;MACtEuC,SAAS,EAAE,IAAI;MACfxD,OAAO;MACPmB,MAAM;MACNsC,YAAY,EAAE,CAAC;QAAEjB;MAAY,CAAC;IAChC,CAAC;EACH;EAEA5C,cAAcA,CAACpB,OAA4B,EAAE;IAC3C,MAAM;MAAEyB;IAAK,CAAC,GAAG,IAAI;IAErB,MAAME,WAAW,GAAG,KAAK,CAACP,cAAc,CAAC,CAAC;IAE1C,IAAI,CAACpB,OAAO,EAAE;MACZ,OAAO2B,WAAW;IACpB;IAEA,MAAM;MAAED;IAAM,CAAC,GAAG1B,OAAO;IAEzB,OAAO9B,YAAY,CAAC,GAAGuD,IAAI,GAAGE,WAAW,EAAE,EAAE;MAC3CC,SAAS,EAAEF,KAAK,CAACE;IACnB,CAAC,CAAC;EACJ;AACF","ignoreList":[]}