{"version":3,"file":"EmailAddressField.js","names":["joi","FormComponent","EmailAddressField","constructor","def","props","options","title","formSchema","string","email","trim","label","toLowerCase","required","allow","customValidationMessage","message","messages","customValidationMessages","default","stateSchema","getViewModel","payload","errors","viewModel","attributes","autocomplete","type"],"sources":["../../../../../src/server/plugins/engine/components/EmailAddressField.ts"],"sourcesContent":["import { type EmailAddressFieldComponent } from '@defra/forms-model'\nimport joi from 'joi'\n\nimport { FormComponent } from '~/src/server/plugins/engine/components/FormComponent.js'\nimport {\n  type FormPayload,\n  type FormSubmissionError\n} from '~/src/server/plugins/engine/types.js'\n\nexport class EmailAddressField extends FormComponent {\n  declare options: EmailAddressFieldComponent['options']\n\n  constructor(\n    def: EmailAddressFieldComponent,\n    props: ConstructorParameters<typeof FormComponent>[1]\n  ) {\n    super(def, props)\n\n    const { options, title } = def\n\n    let formSchema = joi\n      .string()\n      .email()\n      .trim()\n      .label(title.toLowerCase())\n      .required()\n\n    if (options.required === false) {\n      formSchema = formSchema.allow('')\n    }\n\n    if (options.customValidationMessage) {\n      const message = options.customValidationMessage\n\n      formSchema = formSchema.messages({\n        'any.required': message,\n        'string.empty': message,\n        'string.email': message\n      })\n    } else if (options.customValidationMessages) {\n      formSchema = formSchema.messages(options.customValidationMessages)\n    }\n\n    this.formSchema = formSchema.default('')\n    this.stateSchema = formSchema.default(null).allow(null)\n    this.options = options\n  }\n\n  getViewModel(payload: FormPayload, errors?: FormSubmissionError[]) {\n    const viewModel = super.getViewModel(payload, errors)\n    const { attributes } = viewModel\n\n    attributes.autocomplete = 'email'\n\n    return {\n      ...viewModel,\n      type: 'email'\n    }\n  }\n}\n"],"mappings":"AACA,OAAOA,GAAG,MAAM,KAAK;AAErB,SAASC,aAAa;AAMtB,OAAO,MAAMC,iBAAiB,SAASD,aAAa,CAAC;EAGnDE,WAAWA,CACTC,GAA+B,EAC/BC,KAAqD,EACrD;IACA,KAAK,CAACD,GAAG,EAAEC,KAAK,CAAC;IAEjB,MAAM;MAAEC,OAAO;MAAEC;IAAM,CAAC,GAAGH,GAAG;IAE9B,IAAII,UAAU,GAAGR,GAAG,CACjBS,MAAM,CAAC,CAAC,CACRC,KAAK,CAAC,CAAC,CACPC,IAAI,CAAC,CAAC,CACNC,KAAK,CAACL,KAAK,CAACM,WAAW,CAAC,CAAC,CAAC,CAC1BC,QAAQ,CAAC,CAAC;IAEb,IAAIR,OAAO,CAACQ,QAAQ,KAAK,KAAK,EAAE;MAC9BN,UAAU,GAAGA,UAAU,CAACO,KAAK,CAAC,EAAE,CAAC;IACnC;IAEA,IAAIT,OAAO,CAACU,uBAAuB,EAAE;MACnC,MAAMC,OAAO,GAAGX,OAAO,CAACU,uBAAuB;MAE/CR,UAAU,GAAGA,UAAU,CAACU,QAAQ,CAAC;QAC/B,cAAc,EAAED,OAAO;QACvB,cAAc,EAAEA,OAAO;QACvB,cAAc,EAAEA;MAClB,CAAC,CAAC;IACJ,CAAC,MAAM,IAAIX,OAAO,CAACa,wBAAwB,EAAE;MAC3CX,UAAU,GAAGA,UAAU,CAACU,QAAQ,CAACZ,OAAO,CAACa,wBAAwB,CAAC;IACpE;IAEA,IAAI,CAACX,UAAU,GAAGA,UAAU,CAACY,OAAO,CAAC,EAAE,CAAC;IACxC,IAAI,CAACC,WAAW,GAAGb,UAAU,CAACY,OAAO,CAAC,IAAI,CAAC,CAACL,KAAK,CAAC,IAAI,CAAC;IACvD,IAAI,CAACT,OAAO,GAAGA,OAAO;EACxB;EAEAgB,YAAYA,CAACC,OAAoB,EAAEC,MAA8B,EAAE;IACjE,MAAMC,SAAS,GAAG,KAAK,CAACH,YAAY,CAACC,OAAO,EAAEC,MAAM,CAAC;IACrD,MAAM;MAAEE;IAAW,CAAC,GAAGD,SAAS;IAEhCC,UAAU,CAACC,YAAY,GAAG,OAAO;IAEjC,OAAO;MACL,GAAGF,SAAS;MACZG,IAAI,EAAE;IACR,CAAC;EACH;AACF","ignoreList":[]}