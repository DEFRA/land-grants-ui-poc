{"version":3,"file":"List.js","names":["ComponentBase","List","hint","list","items","constructor","def","props","options","model","getList","getViewModel","listItems","viewModel","classes","content","type","bold","trim","title","hideTitle","undefined","text","map","item","itemModel","description"],"sources":["../../../../../src/server/plugins/engine/components/List.ts"],"sourcesContent":["import {\n  type Item,\n  type List as ListType,\n  type ListComponent\n} from '@defra/forms-model'\n\nimport { ComponentBase } from '~/src/server/plugins/engine/components/ComponentBase.js'\nimport { type ListItem } from '~/src/server/plugins/engine/components/types.js'\n\nexport class List extends ComponentBase {\n  declare options: ListComponent['options']\n  hint: ListComponent['hint']\n  list?: ListType\n\n  get items(): Item[] {\n    return this.list?.items ?? []\n  }\n\n  constructor(\n    def: ListComponent,\n    props: ConstructorParameters<typeof ComponentBase>[1]\n  ) {\n    super(def, props)\n\n    const { hint, list, options } = def\n    const { model } = props\n\n    this.hint = hint\n    this.list = model.getList(list)\n    this.options = options\n  }\n\n  getViewModel() {\n    const { items: listItems, options, viewModel } = this\n\n    let { classes, content, items, type } = viewModel\n\n    if (options.type) {\n      type = options.type\n    }\n\n    if (options.bold) {\n      classes ??= ''\n      classes = `${classes} govuk-!-font-weight-bold`.trim()\n    }\n\n    content = {\n      title: !options.hideTitle ? this.title : undefined,\n      text: this.hint ?? ''\n    }\n\n    items = listItems.map((item) => {\n      const itemModel: ListItem = { ...item }\n\n      if (item.description) {\n        itemModel.hint = {\n          text: item.description\n        }\n      }\n\n      return itemModel\n    })\n\n    return {\n      ...viewModel,\n      type,\n      classes,\n      content,\n      items\n    }\n  }\n}\n"],"mappings":"AAMA,SAASA,aAAa;AAGtB,OAAO,MAAMC,IAAI,SAASD,aAAa,CAAC;EAEtCE,IAAI;EACJC,IAAI;EAEJ,IAAIC,KAAKA,CAAA,EAAW;IAClB,OAAO,IAAI,CAACD,IAAI,EAAEC,KAAK,IAAI,EAAE;EAC/B;EAEAC,WAAWA,CACTC,GAAkB,EAClBC,KAAqD,EACrD;IACA,KAAK,CAACD,GAAG,EAAEC,KAAK,CAAC;IAEjB,MAAM;MAAEL,IAAI;MAAEC,IAAI;MAAEK;IAAQ,CAAC,GAAGF,GAAG;IACnC,MAAM;MAAEG;IAAM,CAAC,GAAGF,KAAK;IAEvB,IAAI,CAACL,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,IAAI,GAAGM,KAAK,CAACC,OAAO,CAACP,IAAI,CAAC;IAC/B,IAAI,CAACK,OAAO,GAAGA,OAAO;EACxB;EAEAG,YAAYA,CAAA,EAAG;IACb,MAAM;MAAEP,KAAK,EAAEQ,SAAS;MAAEJ,OAAO;MAAEK;IAAU,CAAC,GAAG,IAAI;IAErD,IAAI;MAAEC,OAAO;MAAEC,OAAO;MAAEX,KAAK;MAAEY;IAAK,CAAC,GAAGH,SAAS;IAEjD,IAAIL,OAAO,CAACQ,IAAI,EAAE;MAChBA,IAAI,GAAGR,OAAO,CAACQ,IAAI;IACrB;IAEA,IAAIR,OAAO,CAACS,IAAI,EAAE;MAChBH,OAAO,KAAK,EAAE;MACdA,OAAO,GAAG,GAAGA,OAAO,2BAA2B,CAACI,IAAI,CAAC,CAAC;IACxD;IAEAH,OAAO,GAAG;MACRI,KAAK,EAAE,CAACX,OAAO,CAACY,SAAS,GAAG,IAAI,CAACD,KAAK,GAAGE,SAAS;MAClDC,IAAI,EAAE,IAAI,CAACpB,IAAI,IAAI;IACrB,CAAC;IAEDE,KAAK,GAAGQ,SAAS,CAACW,GAAG,CAAEC,IAAI,IAAK;MAC9B,MAAMC,SAAmB,GAAG;QAAE,GAAGD;MAAK,CAAC;MAEvC,IAAIA,IAAI,CAACE,WAAW,EAAE;QACpBD,SAAS,CAACvB,IAAI,GAAG;UACfoB,IAAI,EAAEE,IAAI,CAACE;QACb,CAAC;MACH;MAEA,OAAOD,SAAS;IAClB,CAAC,CAAC;IAEF,OAAO;MACL,GAAGZ,SAAS;MACZG,IAAI;MACJF,OAAO;MACPC,OAAO;MACPX;IACF,CAAC;EACH;AACF","ignoreList":[]}