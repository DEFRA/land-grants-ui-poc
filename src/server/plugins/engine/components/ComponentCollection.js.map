{"version":3,"file":"ComponentCollection.js","names":["joi","FormComponent","isFormState","isFormValue","createComponent","getErrors","validationOptions","opts","ComponentCollection","page","parent","components","fields","guidance","formSchema","stateSchema","constructor","defs","props","schema","map","def","filter","component","isFormComponent","object","required","field","collection","name","concat","keys","error","errors","flatMap","isErrorContext","local","title","missing","key","path","find","item","split","shift","child","label","toLowerCase","length","peers","and","isPresent","custom","getFormDataFromState","state","payload","forEach","Object","assign","getFormValueFromState","value","entries","pop","getStateFromValidForm","getContextValueFromState","context","list","getError","push","getViewModel","query","result","type","model","validate","details"],"sources":["../../../../../src/server/plugins/engine/components/ComponentCollection.ts"],"sourcesContent":["import { type ComponentDef } from '@defra/forms-model'\nimport joi, {\n  type CustomValidator,\n  type ErrorReportCollection,\n  type ObjectSchema\n} from 'joi'\n\nimport {\n  FormComponent,\n  isFormState,\n  isFormValue\n} from '~/src/server/plugins/engine/components/FormComponent.js'\nimport {\n  createComponent,\n  type Component,\n  type Field,\n  type Guidance\n} from '~/src/server/plugins/engine/components/helpers.js'\nimport { type ComponentViewModel } from '~/src/server/plugins/engine/components/types.js'\nimport { getErrors } from '~/src/server/plugins/engine/helpers.js'\nimport { type FormModel } from '~/src/server/plugins/engine/models/index.js'\nimport { type PageControllerClass } from '~/src/server/plugins/engine/pageControllers/helpers.js'\nimport { validationOptions as opts } from '~/src/server/plugins/engine/pageControllers/validationOptions.js'\nimport {\n  type FormPayload,\n  type FormState,\n  type FormSubmissionError,\n  type FormSubmissionState,\n  type FormValidationResult\n} from '~/src/server/plugins/engine/types.js'\nimport { type FormQuery } from '~/src/server/routes/types.js'\n\nexport class ComponentCollection {\n  page?: PageControllerClass\n  parent?: Component\n\n  components: Component[]\n  fields: Field[]\n  guidance: Guidance[]\n\n  formSchema: ObjectSchema<FormPayload>\n  stateSchema: ObjectSchema<FormSubmissionState>\n\n  constructor(\n    defs: ComponentDef[],\n    props: {\n      page?: PageControllerClass\n      parent?: Component\n      model: FormModel\n    },\n    schema?: {\n      /**\n       * Defines an all-or-nothing relationship between keys where if one\n       * of the peers is present, all of them are required as well\n       */\n      peers?: string[]\n\n      /**\n       * Defines a custom validation rule for the object schema\n       */\n      custom?: CustomValidator\n    }\n  ) {\n    const components = defs.map((def) => createComponent(def, props))\n\n    const fields = components.filter(\n      (component): component is Field => component.isFormComponent\n    )\n\n    const guidance = components.filter(\n      (component): component is Guidance => !component.isFormComponent\n    )\n\n    let formSchema = joi.object<FormPayload>().required()\n    let stateSchema = joi.object<FormSubmissionState>().required()\n\n    // Add each field or concat collection\n    for (const field of fields) {\n      const { collection, name } = field\n\n      formSchema = collection\n        ? formSchema.concat(collection.formSchema)\n        : formSchema.keys({ [name]: field.formSchema })\n\n      stateSchema = collection\n        ? stateSchema.concat(collection.stateSchema)\n        : stateSchema.keys({ [name]: field.stateSchema })\n    }\n\n    // Add parent field title to collection field errors\n    formSchema = formSchema.error((errors) => {\n      return errors.flatMap((error) => {\n        if (!isErrorContext(error.local) || error.local.title) {\n          return error\n        }\n\n        // Use field key or first missing child field\n        let { missing, key = missing?.[0] } = error.local\n\n        // But avoid numeric key used by array payloads\n        if (typeof key === 'number') {\n          key = error.path[0]\n        }\n\n        // Find the parent field\n        const parent = fields.find(\n          (item) => item.name === key?.split('__').shift()\n        )\n\n        // Find the child field\n        const child = (parent?.collection?.fields ?? fields).find(\n          (item) => item.name === key\n        )\n\n        // Update error with child label\n        if (child && (!error.local.label || error.local.label === 'value')) {\n          error.local.label = child.title.toLowerCase()\n        }\n\n        // Fix error summary links for missing fields\n        if (missing?.length) {\n          error.path = missing\n          error.local.key = missing[0]\n        }\n\n        // Update error with parent title\n        error.local.title ??= parent?.title\n\n        return error\n      })\n    })\n\n    if (schema?.peers) {\n      formSchema = formSchema.and(...schema.peers, {\n        isPresent: isFormValue\n      })\n    }\n\n    if (schema?.custom) {\n      formSchema = formSchema.custom(schema.custom)\n    }\n\n    this.page = props.page\n    this.parent = props.parent\n\n    this.components = components\n    this.fields = fields\n    this.guidance = guidance\n\n    this.formSchema = formSchema\n    this.stateSchema = stateSchema\n  }\n\n  get keys() {\n    return this.fields.flatMap((field) => {\n      const { name, collection } = field\n\n      if (collection) {\n        const { fields } = collection\n        return [name, ...fields.map(({ name }) => name)]\n      }\n\n      return [name]\n    })\n  }\n\n  getFormDataFromState(state: FormSubmissionState) {\n    const payload: FormPayload = {}\n\n    this.fields.forEach((component) => {\n      Object.assign(payload, component.getFormDataFromState(state))\n    })\n\n    return payload\n  }\n\n  getFormValueFromState(state: FormSubmissionState) {\n    const payload: FormPayload = {}\n\n    // Remove name prefix for formatted value\n    for (const [name, value] of Object.entries(\n      this.getFormDataFromState(state)\n    )) {\n      const key = name.split('__').pop()\n      if (!key) {\n        continue\n      }\n\n      payload[key] = value\n    }\n\n    return payload\n  }\n\n  getStateFromValidForm(payload: FormPayload) {\n    const state: FormState = {}\n\n    this.fields.forEach((component) => {\n      Object.assign(state, component.getStateFromValidForm(payload))\n    })\n\n    return state\n  }\n\n  getContextValueFromState(state: FormSubmissionState) {\n    const context: FormState = {}\n\n    for (const component of this.fields) {\n      context[component.name] = component.getContextValueFromState(state)\n    }\n\n    return context\n  }\n\n  getErrors(errors?: FormSubmissionError[]): FormSubmissionError[] | undefined {\n    const { fields } = this\n\n    const list: FormSubmissionError[] = []\n\n    // Add only one error per field\n    for (const field of fields) {\n      const error = field.getError(errors)\n\n      if (error) {\n        list.push(error)\n      }\n    }\n\n    if (!list.length) {\n      return\n    }\n\n    return list\n  }\n\n  getViewModel(\n    payload: FormPayload,\n    errors?: FormSubmissionError[],\n    query: FormQuery = {}\n  ) {\n    const { components } = this\n\n    const result: ComponentViewModel[] = components.map((component) => {\n      const { isFormComponent, type } = component\n\n      const model =\n        component instanceof FormComponent\n          ? component.getViewModel(payload, errors, query)\n          : component.getViewModel()\n\n      return { type, isFormComponent, model }\n    })\n\n    return result\n  }\n\n  /**\n   * Validate form payload\n   */\n  validate(value: FormPayload = {}): FormValidationResult<FormPayload> {\n    const result = this.formSchema.validate(value, opts)\n    const details = result.error?.details\n\n    return {\n      value: (result.value ?? {}) as typeof value,\n      errors: this.page?.getErrors(details) ?? getErrors(details)\n    }\n  }\n}\n\n/**\n * Check for field local state\n */\nexport function isErrorContext(\n  value?: unknown\n): value is ErrorReportCollection['local'] {\n  return isFormState(value) && typeof value.label === 'string'\n}\n"],"mappings":"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","ignoreList":[]}